{"version":3,"sources":["components/NavBar/Toolbar.tsx","components/NavBar/ToolbarMenu.tsx","components/NavBar/ToolbarMobileMenu.tsx","components/NavBar.tsx","sections/hero.tsx","sections/projects.tsx","sections/skills.tsx","sections/about.tsx","sections/contact.tsx","sections/index.tsx","App.tsx","vitals/reportWebVitals.ts","theme.ts","index.tsx"],"names":["Toolbar","menuId","mobileMenuId","onMobileMenuOpen","sections","className","map","section","Button","variant","name","id","IconButton","aria-label","aria-controls","aria-haspopup","onClick","color","ToolbarMenu","anchorEl","open","onClose","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","ToolbarMobileMenu","NavBar","useState","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","AppBar","position","elevation","Typography","noWrap","event","currentTarget","Hero","Projects","Skills","About","Contact","SectionComponents","App","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","baseStyle","primary","theme","createMuiTheme","palette","light","main","dark","contrastText","secondary","error","typography","fontFamily","join","ReactDOM","render","ThemeProvider","StylesProvider","injectFirst","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30c366cf.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Section } from '../../types';\n\nimport '../styles/NavBar.scss';\n\ntype ToolbarProps = {\n  menuId: string;\n  mobileMenuId: string;\n  onMobileMenuOpen: (event: React.MouseEvent<HTMLElement>) => void;\n  sections: Array<Section>;\n};\n\nfunction Toolbar({menuId, mobileMenuId, onMobileMenuOpen, sections}: ToolbarProps) {\n  return (\n    <>\n      <div className='navbar-section-desktop'>\n        {sections.map((section) =>\n          <Button key={section.id} variant=\"text\" className=\"navbar-button\">{section.name}</Button>\n        )}\n      </div>\n\n      <div className='navbar-section-mobile'>\n        <IconButton\n          aria-label=\"show more\"\n          aria-controls={mobileMenuId}\n          aria-haspopup=\"true\"\n          onClick={onMobileMenuOpen}\n          color=\"inherit\"\n        >\n          <MoreIcon />\n        </IconButton>\n      </div>\n    </>\n  )\n}\n\nexport default Toolbar;\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Section } from '../../types';\n\nimport '../styles/NavBar.scss';\n\ntype ToolbarMenuProps = {\n  id: string;\n  anchorEl: null | Element | ((element: Element) => Element);\n  open: boolean;\n  onClose: () => void;\n  sections: Array<Section>;\n}\n\nfunction ToolbarMenu({ id, anchorEl, open, onClose, sections }: ToolbarMenuProps) {\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={id}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={open}\n      onClose={onClose}\n    >\n      {sections.map((section) =>\n        <MenuItem key={section.id}>{section.name}</MenuItem>\n      )}\n    </Menu>\n  );\n}\n\nexport default ToolbarMenu;\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Section } from '../../types';\n\nimport '../styles/NavBar.scss';\n\ntype ToolbarMobileMenuProps = {\n  id: string;\n  anchorEl: null | Element | ((element: Element) => Element);\n  open: boolean;\n  onClose: () => void;\n  sections: Array<Section>;\n}\n\nfunction ToolbarMobileMenu({ id, anchorEl, open, onClose, sections }: ToolbarMobileMenuProps) {\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={id}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={open}\n      onClose={onClose}\n    >\n      {sections.map((section) =>\n        <MenuItem key={section.id}>{section.name}</MenuItem>\n      )}\n    </Menu>\n  );\n}\n\nexport default ToolbarMobileMenu;\n","import { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport {default as NavBarToolbar} from './NavBar/Toolbar'\nimport {default as NavBarToolbarMenu} from './NavBar/ToolbarMenu'\nimport {default as NavBarToolbarMobileMenu} from './NavBar/ToolbarMobileMenu'\n\nimport { Section } from '../types';\n\nimport './styles/NavBar.scss';\n\ntype NavBarProps = {\n  sections: Array<Section>;\n}\n\nfunction NavBar({ sections }: NavBarProps) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'dashboard-search-account-menu';\n  const mobileMenuId = 'dashboard-search-account-menu-mobile';\n  \n  return (\n    <div className='navbar-grow'>\n      <AppBar position=\"fixed\" elevation={8}>\n        <Toolbar>\n          <Typography className='navbar-title' variant=\"h6\" noWrap>Sai Hemanth Bheemreddy</Typography>\n          <div className='navbar-grow' />\n\n          <NavBarToolbar \n            menuId={menuId}\n            mobileMenuId={mobileMenuId}\n            onMobileMenuOpen={handleMobileMenuOpen}\n            sections={sections}\n          />\n        </Toolbar>\n      </AppBar>\n\n      <NavBarToolbarMobileMenu \n        anchorEl={mobileMoreAnchorEl} \n        id={mobileMenuId} \n        open={isMobileMenuOpen} \n        onClose={handleMobileMenuClose} \n        sections={sections}\n      />\n\n      <NavBarToolbarMenu \n        anchorEl={anchorEl} \n        id={menuId} \n        open={isMenuOpen} \n        onClose={handleMenuClose} \n        sections={sections}\n      />      \n    </div>\n  );\n}\n\nexport default NavBar;","function Hero() {\n  return (\n    <>Hero</>\n  );\n}\n\nexport default Hero;\n","function Projects() {\n  return (\n    <>Projects</>\n  );\n}\n\nexport default Projects;\n","function Skills() {\n  return (\n    <>Skills</>\n  );\n}\n\nexport default Skills;\n","function About() {\n  return (\n    <>About</>\n  );\n}\n\nexport default About;\n","function Contact() {\n  return (\n    <>Contact</>\n  );\n}\n\nexport default Contact;\n","import Hero from \"./hero\";\nimport Projects from \"./projects\";\nimport Skills from \"./skills\";\nimport About from \"./about\";\nimport Contact from \"./contact\";\n\nexport const SectionComponents: { [key: string]: JSX.Element; }  = {\n  \"Hero\": <Hero />,\n  \"Projects\": <Projects />,\n  \"Skills\": <Skills />,\n  \"About\": <About />,\n  \"Contact\": <Contact />,\n}\n","import NavBar from './components/NavBar';\nimport './styles/App.scss';\nimport {SectionComponents} from './sections';\nimport sections from './json/sections.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar \n        sections={sections.slice(1)}\n      />\n\n      <div className=\"container\">\n        {sections.map((section) => \n          <section key={section.id} className=\"child\">{SectionComponents[section.name]}</section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport './declarations.d';\nimport baseStyle from './styles/base.scss'\n\nconsole.log(baseStyle.primary)\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { \n      light: '#434345',\n      main: '#1C1C1E',\n      dark: '#000000',\n      contrastText: '#FFFFFF'\n    },\n    secondary: { \n      light: '#69A8FF',\n      main: '#007AFF',\n      dark: '#004FCB',\n      contrastText: '#FFFFFF'\n    },\n    error: { \n      main: '#FF3B30' \n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"'Helvetica Neue'\",\n      \"Roboto\",\n      \"'Segoe UI'\",\n      \"Oxygen\",\n      \"Ubuntu\",\n      \"Cantarell\",\n      \"'Open Sans'\",\n      \"sans-serif\"\n    ].join(','),\n  },\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './vitals/reportWebVitals';\nimport { StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <StylesProvider injectFirst>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </StylesProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}