(this["webpackJsonpsaihemanthbr.github.io"]=this["webpackJsonpsaihemanthbr.github.io"]||[]).push([[0],{102:function(e){e.exports=JSON.parse('{"data":{"user":{"pinnedItems":{"edges":[{"node":{"id":"MDEwOlJlcG9zaXRvcnkyODQyMzM2NTU="}},{"node":{"id":"MDEwOlJlcG9zaXRvcnkyNDk0OTU2MTE="}},{"node":{"id":"MDEwOlJlcG9zaXRvcnkzMjUzMDYyNDk="}},{"node":{"id":"MDEwOlJlcG9zaXRvcnkyNDgxNjI3NTI="}}]},"repositories":{"totalCount":14,"nodes":[{"id":"MDEwOlJlcG9zaXRvcnkzNDMzNTc2NDE=","name":"BDA-Hadoop","nameWithOwner":"SaiHemanthBR/BDA-Hadoop","description":null,"url":"https://github.com/SaiHemanthBR/BDA-Hadoop","homepageUrl":null,"updatedAt":"2021-03-11T03:26:55Z","stargazerCount":0,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U0NjM=","name":"Batchfile","color":"#C1F12E"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"},{"id":"MDg6TGFuZ3VhZ2UxNTg=","name":"Java","color":"#b07219"}],"edges":[{"size":287},{"size":868},{"size":2786}]},"readme":{"text":"# Apache Hadoop Installation\\n\\nWanna install Hadoop? Huh. Well there are 3 ways to do it.\\n\\n## Method 1: Using Linux/macOS\\nThe best way is to not use windows. Use linux or macOS and follow the steps in Method 3. (What is windows, anyway?)\\n<br><br>\\n\\n## Method 2: Using Docker\\nWell, the second best way is to use Docker. It\'s only 3 steps\\n\\n### Steps:\\n\\n  1. Download and install Docker Desktop from the link below <br>\\n  [https://www.docker.com/products/docker-desktop](https://www.docker.com/products/docker-desktop)\\n\\n  2. After the installation is done. <br>\\n      > *Note: Always run the following commands from the same working directory. It will create two directories `workspace` and `dfsdata` which are used by docker. (Recommended to run in HOME dir)*\\n      macOS (unix) or linux users, run the following command:\\n      ```\\n      docker run --name hadoop --rm -it -p 9870:9870 -p 8088:8088 -v \\"$(pwd)/workspace\\":\\"/home/hdoop/workspace\\" -v \\"$(pwd)/dfsdata\\":\\"/home/hdoop/dfsdata\\" -v \\"$(pwd)/hivedata\\":\\"/home/hdoop/hivedata/\\" saihemanthbr/hadoop\\n      ```\\n      Its a single line. You can save it to a .sh file and run that file \\n      ([Click here to download](https://gist.github.com/SaiHemanthBR/f765395e751b3813ca3287844816ce78#file-run_hadoop-sh))\\n\\n      Windows users (others), run the following the command:\\n      > *Note: Always run the following commands from the same working directory. It will create two directories `workspace` and `dfsdata` which are used by docker. (Recommended to run in C:/ drive)*\\n      ```\\n      docker run --name hadoop --rm -it -p 9870:9870 -p 8088:8088 -v \\"%cd%\\"/workspace:\\"/home/hdoop/workspace\\" -v \\"%cd%\\"/dfsdata:\\"/home/hdoop/dfsdata\\" -v \\"%cd%\\"/hivedata:\\"/home/hdoop/hivedata\\" saihemanthbr/hadoop\\n      ```\\n      Its a single line. You can save it to a .bat file and run that file\\n      ([Click here to download](https://gist.github.com/SaiHemanthBR/f765395e751b3813ca3287844816ce78#file-run_hadoop-bat))\\n  \\n  3. Sit back and watch Youtube/Prime/Netflix while Docker downloads and install Apache Hadoop. (It\'s a 3GB download)\\n\\n## Method 3: Using VirtualBox\\nOh! Nice I see you selected the worst method. Ok then, let\'s go.\\n\\nLets follow the steps assuming, you have installed Ubuntu on VirtualBox.\\n\\nWhat? You haven\'t? Don\'t worry, [Follow this](https://github.com/SaiHemanthBR/.LPLab/blob/master/VM_Install.pdf)\\n\\n> *Note: Don\'t type the `~ $` in the commands below. Type command following `$`*\\n\\n> *Note: `~` means you need to be in HOME dir (use `cd` to quickly get to HOME dir). It is used to denote the pwd of the terminal*\\n\\n### Steps:\\n\\n  1. Download Apache Hadoop from the link below.\\n  [https://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz](https://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz) <br>\\n  or, if you can type the command below\\n      ```\\n      ~ $ wget http://apachemirror.wuchna.com/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz\\n      ```\\n      Use the Command, its easier\\n\\n  2. While that .tarball is downloading, we need to do some pre-setup stuff. (In a new terminal tab)\\n\\n  **Pre-Setup**\\n\\n  3. We need to install Java 8. We\'ll use OpenJDK because its easier to install. So run the following command (in terminal, ofcourse).\\n      ```\\n      ~ $ apt-get update\\n      ~ $ apt-get install -y openjdk-8-jdk\\n      ```\\n  \\n  4. By default SSH Client is installed in linux, but we also need to make sure SSH Server is installed. This is used by hadoop.\\n      ```\\n      ~ $ apt-get install -y openssh-server openssh-client\\n      ```\\n  \\n  5. Now we need to do some config for OpenSSH to work properly. So run the following commands\\n      ```\\n      ~ $ ssh-keygen -t rsa -P \'\' -f ~/.ssh/id_rsa\\n      ~ $ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\\n      ~ $ chmod 600 ~/.ssh/authorized_keys\\n      ```\\n      Now, also start the OpenSSH-server by running\\n      ```\\n      ~ $ sudo /etc/init.d/ssh start\\n      ```\\n      This needs to be done only once.\\n  \\n  **Installation**\\n\\n  6. Now, find where the `hadoop-3.3.0.tar.gz` is downloaded. If you downloaded using link, it will be ~/Downloads folder \\n      ```\\n        ~ $ mv ~/Downloads/hadoop-3.3.0.tar.gz .\\n      ```\\n  <br>or<br> \\n  if you used the command it will be in your home directory (hopefully).\\n\\n  7. Now, we need to extract it. So run\\n      ```\\n        tar xzf hadoop-3.3.0.tar.gz\\n      ```\\n      This will extract the .tar file contents into hadoop-3.3.0 folder\\n    \\n  8. To make sure, run `ls` commands and the output should be \\n      ```\\n        ~ $ ls\\n        Documents Pictures hadoop-3.3.0.tar.gz hadoop-3.3.0 Downloads Music\\n      ```\\n      This won\'t be the exact output but make sure you can see `hadoop-3.3.0` dir.\\n  \\n  **Configuration**\\n\\n  You can download these config files from [here](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5). This will make it easy for you to add config files\\n\\n  9. You now need to add some Environment Variables to .bashrc file, so run the following command.\\n      ```\\n      ~ $ gedit ~/.bashrc\\n      ```\\n      This will open .bashrc file in gedit, now add the following text to the end of the file. Make sure to edit the username in the firstline\\n\\n      ```\\n      # Copy this files content to the end of ~/.bashrc\\n      # change the username. HADOOP_HOME=/home/{username}/hadoop-3.3.0\\n      export HADOOP_HOME=/home/ubuntu/hadoop-3.3.0\\n      export HADOOP_INSTALL=$HADOOP_HOME\\n      export HADOOP_MAPRED_HOME=$HADOOP_HOME\\n      export HADOOP_COMMON_HOME=$HADOOP_HOME\\n      export HADOOP_HDFS_HOME=$HADOOP_HOME\\n      export YARN_HOME=$HADOOP_HOME\\n      export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\\n      export HADOOP_OPTS=\\"-Djava.library.path=$HADOOP_HOME/lib\\"\\n      export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin\\n      export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\\n      export CLASSPATH=\\"$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-client-core-3.3.0.jar:$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-client-common-3.3.0.jar:$HADOOP_HOME/share/hadoop/common/hadoop-common-3.3.0.jar:~/MapReduceTutorial/SalesCountry/*:$HADOOP_HOME/lib/*:$CLASSPATH\\"\\n      export HADOOP_CLASSPATH=$JAVA_HOME/lib/tools.jar\\n      ```\\n      This above content is also in [exports](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-exports) file.\\n  \\n  10. Now, to load those Environment Variables into the current terminal session, run\\n      ```\\n      ~ $ source ~/.bashrc\\n      ```\\n  \\n  11. Now that is done, `cd` into `$HADOOP_HOME/etc/hadoop` by running the following command\\n      ```\\n      ~ $ cd $HADOOP_HOME/etc/hadoop\\n      ~/hadoop-3.3.0/etc/hadoop $\\n      ```\\n  \\n  12. Now open and edit `hadoop-env.sh` file\\n      ```\\n      ~/hadoop-3.3.0/etc/hadoop $ gedit hadoop-env.sh\\n      ```\\n      This will open .bashrc file in gedit, now modify `line 54` as follows\\n      ```\\n        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\\n      ```\\n      This above file can be downloaded from here: [hadoop-env.sh](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-hadoop-env-sh) and simply copied into `~/hadoop-3.3.0/etc/hadoop`\\n  \\n  13. Now open and edit `core-site.xml` file\\n      ```\\n      ~/hadoop-3.3.0/etc/hadoop $ gedit core-site.xml\\n      ```\\n      This will open .bashrc file in gedit, now add the following content into `<configuration> </configuration>` tags\\n      ```\\n      <configuration>\\n        <property>\\n          <name>hadoop.tmp.dir</name>\\n          \x3c!-- Dont forget to change the username. Path should be /home/{username}/tmpdata --\x3e\\n          <value>/home/hdoop/tmpdata</value>\\n        </property>\\n        <property>\\n          <name>fs.default.name</name>\\n          <value>hdfs://127.0.0.1:9000</value>\\n        </property>\\n      </configuration>\\n      ```\\n      This above file can be downloaded from here: [core-site.xml](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-core-site-xml) and simply copied into `~/hadoop-3.3.0/etc/hadoop`\\n  \\n  14. Now open and edit `hdfs-site.xml` file\\n      ```\\n      ~/hadoop-3.3.0/etc/hadoop $ gedit hdfs-site.xml\\n      ```\\n      This will open .bashrc file in gedit, now add the following content into `<configuration> </configuration>` tags\\n      ```\\n      <configuration>\\n        <property>\\n          <name>dfs.name.dir</name>\\n          \x3c!-- Dont forget to change the username. Path should be /home/{username}/dfsdata/namenode --\x3e\\n          <value>/home/hdoop/dfsdata/namenode</value>\\n        </property>\\n        <property>\\n          <name>dfs.data.dir</name>\\n          \x3c!-- Dont forget to change the username. Path should be /home/{username}/dfsdata/datanode --\x3e\\n          <value>/home/hdoop/dfsdata/datanode</value>\\n        </property>\\n        <property>\\n          <name>dfs.replication</name>\\n          <value>1</value>\\n        </property>\\n      </configuration>\\n      ```\\n      This above file can be downloaded from here: [hdfs-site.xml](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-hdfs-site-xml) and simply copied into `~/hadoop-3.3.0/etc/hadoop`\\n  \\n  15. Now open and edit `mapred-site.xml` file\\n      ```\\n      ~/hadoop-3.3.0/etc/hadoop $ gedit mapred-site.xml\\n      ```\\n      This will open .bashrc file in gedit, now add the following content into `<configuration> </configuration>` tags\\n      ```\\n      <configuration> \\n        <property> \\n          <name>mapreduce.framework.name</name> \\n          <value>yarn</value> \\n        </property> \\n      </configuration>\\n      ```\\n      This above file can be downloaded from here: [mapred-site.xml](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-mapred-site-xml) and simply copied into `~/hadoop-3.3.0/etc/hadoop`\\n  \\n  16. Now open and edit `yarn-site.xml` file\\n      ```\\n      ~/hadoop-3.3.0/etc/hadoop $ gedit yarn-site.xml\\n      ```\\n      This will open .bashrc file in gedit, now add the following content into `<configuration> </configuration>` tags\\n      ```\\n      <configuration>\\n        <property>\\n          <name>yarn.nodemanager.aux-services</name>\\n          <value>mapreduce_shuffle</value>\\n        </property>\\n        <property>\\n          <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>\\n          <value>org.apache.hadoop.mapred.ShuffleHandler</value>\\n        </property>\\n        <property>\\n          <name>yarn.resourcemanager.hostname</name>\\n          <value>0.0.0.0</value>\\n        </property>\\n        <property>\\n          <name>yarn.acl.enable</name>\\n          <value>0</value>\\n        </property>\\n        <property>\\n          <name>yarn.nodemanager.env-whitelist</name>   \\n          <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PERPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>\\n        </property>\\n      </configuration>\\n      ```\\n      This above file can be downloaded from here: [yarn-site.xml](https://gist.github.com/SaiHemanthBR/d9badbd36bc830d83cab874ed48bffb5#file-yarn-site-xml) and simply copied into `~/hadoop-3.3.0/etc/hadoop`\\n  \\n  Finally, congratulate yourself mate for making this far. We aren\'t done yet tho.\\n\\n  17. Come back to HOME dir by running:\\n      ```\\n        ~/hadoop-3.3.0/etc/hadoop $ cd\\n        ~ $\\n      ```\\n\\n  18. We need to format `hadoop dfs`, this is similar to formating a pendrive or HDD or SSD. To do this run,\\n      ```\\n      ~ $ hdfs namenode -format\\n      ```\\n      If this is done without any error, you will see a shutdown notification as follows.\\n      ```\\n      /******************************************************\\n      SHUTDOWN_MSG: Shutting down NameNode at Anakin-VM/127.0.1.1\\n      *******************************************************/\\n      ```\\n      You might not see `Anakin-VM`. This is my computer name, so will see your computer name.\\n  \\n  **Startup**\\n  \\n  19. Now, run the following to commands to start Hadoop\\n      ```\\n      ~ $ start-dfs.sh\\n      Starting namenodes on [localhost]\\n      Starting datanodes\\n      Starting secondary namenodes [ca1d73971731]\\n      2020-08-06 18:53:49,501 WARN util.NativeCodeLoader: ...\\n      ```\\n\\n      ```\\n      ~ $ start-yarn.sh\\n      Starting resourcemanager\\n      Starting nodemanagers\\n      ```\\n  \\n  20. To check if all the processors are running, run\\n      ```\\n      ~ $ jps\\n      1904 NameNode\\n      2900 Jps\\n      2217 SecondaryNameNode\\n      2537 NodeManager\\n      2042 DataNode\\n      2426 ResourceManager\\n      ```\\n      The numbers or order can be different, but those 6 process need to be running.\\n  \\n  21. To access, Hadoop Cluster Web Console, goto `http://localhost:8088` \\n  <br>and<br>\\n  To access, Hadoop Datanode Status page, goto `http://localhost:9870`\\n\\n<br><br>\\nThat\'s it, congraulations, its done.\\n\\nor you could have just used Docker. hmmmmmm\\n\\n\\n\\n  \\n    "},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyODQyMzM2NTU=","name":"Kushagra","nameWithOwner":"SaiHemanthBR/Kushagra","description":null,"url":"https://github.com/SaiHemanthBR/Kushagra","homepageUrl":null,"updatedAt":"2021-02-25T18:42:16Z","stargazerCount":1,"forkCount":2,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[],"edges":[]},"readme":{"text":"# Kushagra - AI-powered Mobile App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\n<br>\\n\\n## Submodules\\n  |Repository|Description|\\n  |----------|-----------|\\n  |[AI](https://github.com/SaiHemanthBR/Kushagra-AI/)|Inference Server for Image Classification Model.|\\n  |[iOS](https://github.com/SaiHemanthBR/Kushagra-iOS/)|iOS Application developed in this project.|\\n  |[Android](https://github.com/SaiHemanthBR/Kushagra-Android/)|Android Application developed in this project.|\\n  |[Report](https://github.com/SaiHemanthBR/Kushagra-Report/)|Repository for the academic report that was submited with this project.|\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNTQ0MjUyNjQ=","name":"Kushagra-AI","nameWithOwner":"SaiHemanthBR/Kushagra-AI","description":"An AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.","url":"https://github.com/SaiHemanthBR/Kushagra-AI","homepageUrl":"","updatedAt":"2020-08-16T18:23:45Z","stargazerCount":1,"forkCount":1,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U1MzU=","name":"Dockerfile","color":"#384d54"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":494},{"size":4723}]},"readme":{"text":"# Kushagra - AI-powered Mobile App - Inference Server\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the Inference Server that performs image classification on images captured by the user.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n## Endpoints\\n  * [POST] `/crop` - classifies image into one of 10 crop classes. <br>\\n    ```Content-Type: multipart/form-data```\\n    \\n    Query Parameters <br>\\n    |Parameter|Description|Type|\\n    |---------|-----------|----|\\n    |img|Image of the crop that needs to be classfied.|Image File|\\n    \\n    <br>\\n\\n    Response Object <br>\\n    |Object|Data Type|Description|\\n    |------|---------|-----------|\\n    |pred|integer|Index of Predicted Class. (Index of largest element in `cnf` array.)|\\n    |cnf|array[double]|Confidence of prediction for each index. values of Softmax of last layer of the ResNet model.|\\n    |kind|string|Value: `\\"crop\\"`<br>Kind of prediction. (crop\\\\|disease)|\\n\\n\\n    <br><br>\\n\\n  * [POST] `/disease` - classifies image into one of 37 crop diseases. <br>\\n    ```Content-Type: multipart/form-data```\\n    \\n    Query Parameters <br>\\n    |Parameter|Description|Type|\\n    |---------|-----------|----|\\n    |img|Image of the crop that needs to be classfied.|Image File|\\n\\n    <br>\\n\\n    Response Object <br>\\n    |Object|Data Type|Description|\\n    |------|---------|-----------|\\n    |pred|integer|Index of Predicted Class. (Index of largest element in `cnf` array.)|\\n    |cnf|array[double]|LogSoftmax values of last layer of the ResNet model.|\\n    |kind|string|Value: `\\"disease\\"`<br>Kind of prediction. (crop\\\\|disease)|\\n\\n    <br><br>\\n\\n## Installation (Docker) (Recommended)\\n  1. To Build: <br />\\n      `docker build -t crop-prediction -f docker/Dockerfile .`\\n    \\n  2. To Run:<br />\\n      `docker run -d --rm -p 8000:8000 --name crop-prediction crop-prediction`\\n\\n## Installation\\n  1. Install required packages <br />\\n      `pip3 install -r requirements.txt`\\n\\n  2. Download models <br />\\n      `python3 download_models.py`\\n\\n  3. Run Server <br />\\n      `python3 app.py`\\n\\n<br><br>\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyMzkxODk2ODc=","name":"Kushagra-Android","nameWithOwner":"SaiHemanthBR/Kushagra-Android","description":null,"url":"https://github.com/SaiHemanthBR/Kushagra-Android","homepageUrl":null,"updatedAt":"2021-01-17T11:59:15Z","stargazerCount":1,"forkCount":1,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UxNTg=","name":"Java","color":"#b07219"}],"edges":[{"size":100186}]},"readme":{"text":"# Kushagra - AI-powered Mobile App - Android App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the Android Mobile App developed in this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n\x3c!-- ## Screenshots --\x3e\\n\x3c!-- Added Screenshots here --\x3e\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNDIxNzM4NTU=","name":"Kushagra-iOS","nameWithOwner":"SaiHemanthBR/Kushagra-iOS","description":null,"url":"https://github.com/SaiHemanthBR/Kushagra-iOS","homepageUrl":null,"updatedAt":"2021-02-25T18:33:26Z","stargazerCount":1,"forkCount":1,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UxNDE=","name":"Ruby","color":"#701516"},{"id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML","color":"#e34c26"},{"id":"MDg6TGFuZ3VhZ2UzNzE=","name":"Swift","color":"#ffac45"}],"edges":[{"size":660},{"size":7758},{"size":120708}]},"readme":{"text":"# Kushagra - AI-powered Mobile App - iOS App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the iOS/iPadOS App developed in this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n\x3c!-- ## Screenshots --\x3e\\n\x3c!-- Added Screenshots here --\x3e\\n\\n<br><br>\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNzM1Njc4NTg=","name":"Kushagra-Report","nameWithOwner":"SaiHemanthBR/Kushagra-Report","description":null,"url":"https://github.com/SaiHemanthBR/Kushagra-Report","homepageUrl":null,"updatedAt":"2021-01-17T11:51:35Z","stargazerCount":1,"forkCount":1,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UzMTg=","name":"TeX","color":"#3D6117"}],"edges":[{"size":50556}]},"readme":{"text":"# Kushagra - AI-powered Mobile App - Report\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the academic report that was submited with this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkzNzgxNDY4ODQ=","name":"MathLang","nameWithOwner":"SaiHemanthBR/MathLang","description":null,"url":"https://github.com/SaiHemanthBR/MathLang","homepageUrl":null,"updatedAt":"2021-06-19T06:01:03Z","stargazerCount":2,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":5859}]},"readme":{"text":"# MathLang\\n\\nI was BOREDDDD!, so for fun learnt a wee bit of arm64 assembly language and wrote this verryy little program that takes in a math expression like `x=a%b/d*c+e-f` and generates assembly code, assembles it and links it to make a executable code. **v1** has no datatyping, support for `()` (yet!) or runtime I/O. still learning...\\n\\nThe goal is to create a tenny-tiny language for writing and compiling simple math equations and work on a arm64 processor (my raspberry pi).\\n\\n## TODO\\n  * Runtime I/O\\n  * variable declarations\\n\\n## Example Output\\n\\nOutput with `DEBUG=1`\\n```\\nEnter an Expression:\\nx=a%b/d*c+(e-f)\\n\\nInput: x=a%b/d*c+(e-f)\\nInfix: x = a % b / d * c + ( e - f )\\nPostfix: x a b % d / c e f - + * =\\n\\nEnter value for \'a\': 98\\nEnter value for \'b\': 124\\nEnter value for \'d\': 634\\nEnter value for \'c\': 325\\nEnter value for \'e\': -521 \\nEnter value for \'f\': 6  \\n\\nThree Address Code: \\n[(\'%\', \'_temp_0\', \'a\', \'b\'),\\n(\'/\', \'_temp_1\', \'_temp_0\', \'d\'),\\n(\'-\', \'_temp_2\', \'e\', \'f\'),\\n(\'+\', \'_temp_3\', \'c\', \'_temp_2\'),\\n(\'*\', \'_temp_4\', \'_temp_1\', \'_temp_3\'),\\n(\'=\', \'_temp_5\', \'x\', \'_temp_4\')]\\n\\nAssembly:\\n.data\\n  x: .word 0\\n  a: .word 98\\n  b: .word 124\\n  d: .word 634\\n  c: .word 325\\n  e: .word -521\\n  f: .word 6\\n  _temp_0: .word 0\\n  _temp_1: .word 0\\n  _temp_2: .word 0\\n  _temp_3: .word 0\\n  _temp_4: .word 0\\n  _temp_5: .word 0\\n\\n.text\\n.globl _start\\n_start:\\n  ldr w1, =a\\n  ldr w1, [x1]\\n  ldr w2, =b\\n  ldr w2, [x2]\\n  udiv w3, w1, w2\\n  msub w4, w3, w2, w1\\n  ldr w0, =_temp_0\\n  str w4, [x0]\\n  ldr w1, =_temp_0\\n  ldr w1, [x1]\\n  ldr w2, =d\\n  ldr w2, [x2]\\n  sdiv w1, w1, w2\\n  ldr w0, =_temp_1\\n  str w1, [x0]\\n  ldr w1, =e\\n  ldr w1, [x1]\\n  ldr w2, =f\\n  ldr w2, [x2]\\n  sub w1, w1, w2\\n  ldr w0, =_temp_2\\n  str w1, [x0]\\n  ldr w1, =c\\n  ldr w1, [x1]\\n  ldr w2, =_temp_2\\n  ldr w2, [x2]\\n  add w1, w1, w2\\n  ldr w0, =_temp_3\\n  str w1, [x0]\\n  ldr w1, =_temp_1\\n  ldr w1, [x1]\\n  ldr w2, =_temp_3\\n  ldr w2, [x2]\\n  mul w1, w1, w2\\n  ldr w0, =_temp_4\\n  str w1, [x0]\\n  ldr w1, =_temp_4\\n  ldr w1, [x1]\\n  ldr w0, =x\\n  str w1, [x0]\\n_exit:\\n  mov x0, #0\\n  mov w8, #93\\n  svc #0\\n\\n> Saved at a.out\\n```\\n"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkzMjUzMDYyNDk=","name":"nano_web_server","nameWithOwner":"SaiHemanthBR/nano_web_server","description":null,"url":"https://github.com/SaiHemanthBR/nano_web_server","homepageUrl":null,"updatedAt":"2021-03-10T08:00:58Z","stargazerCount":1,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UxNDA=","name":"JavaScript","color":"#f1e05a"},{"id":"MDg6TGFuZ3VhZ2UxMzk=","name":"Shell","color":"#89e051"},{"id":"MDg6TGFuZ3VhZ2UzMDg=","name":"CSS","color":"#563d7c"}],"edges":[{"size":108},{"size":156},{"size":239}]},"readme":null,"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNTAxOTIzNjM=","name":"PhysicsSims","nameWithOwner":"SaiHemanthBR/PhysicsSims","description":null,"url":"https://github.com/SaiHemanthBR/PhysicsSims","homepageUrl":null,"updatedAt":"2021-06-23T12:55:25Z","stargazerCount":1,"forkCount":0,"isArchived":true,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U0ODc=","name":"Metal","color":"#8f14e9"},{"id":"MDg6TGFuZ3VhZ2UzNzE=","name":"Swift","color":"#ffac45"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":1188},{"size":7637},{"size":23466}]},"readme":{"text":"# Physics Simulations\\n\\n  * Motion in 1D\\n    * Ball in Free Fall -- \u2705\\n    * Landing a rocket\\n    * Relative velocity: race on a moving sidewalk\\n  \\n  * Motion in 2D\\n    * Race between a dropped ball and one launched horizontally\\n    * A ballistics cart\\n    * Projectile Motion \\n    * The monkey and the hunter\\n    * Motion with Constant Acceleration\\n  \\n  * Forces\\n    * Force and motion in 1D\\n    * The normal force\\n    * Static friction\\n    * Elevator physics\\n    * Atwood\'s machine\\n    * Force and motion in 1D, with friction\\n    * Friction on an incline\\n  \\n  * Circular motion\\n    * Circular motion\\n    * A ball on a string\\n    * A disk on a turntable\\n    * Gravitron (carnival ride model)\\n    * Car on a banked turn\\n\\n  * Harmonic Motion\\n    * Pendulum -- \u2705\\n    * Double Pendulum -- \u2705\\n    * Spring Pendulum -- \u2705\\n    * Pendulum - with Damping -- \u2705\\n    * Spring Wave\\n  \\n  * Experiments\\n    * Havana Song Synth -- \u2705\\n  \\n  * Renderings\\n    * Mandelbrot Set -- Pan & Zoom remaining"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNDk0OTU2MTE=","name":"saihemanthbr.github.io","nameWithOwner":"SaiHemanthBR/saihemanthbr.github.io","description":"Personal Website.","url":"https://github.com/SaiHemanthBR/saihemanthbr.github.io","homepageUrl":"https://saihemanthbr.github.io","updatedAt":"2021-06-22T16:56:00Z","stargazerCount":2,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML","color":"#e34c26"},{"id":"MDg6TGFuZ3VhZ2U2MDU=","name":"SCSS","color":"#c6538c"},{"id":"MDg6TGFuZ3VhZ2UyODc=","name":"TypeScript","color":"#2b7489"}],"edges":[{"size":2055},{"size":9021},{"size":12460}]},"readme":{"text":"# Personal Website"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNTQ2NTI2ODQ=","name":"SkyRegion","nameWithOwner":"SaiHemanthBR/SkyRegion","description":"SkyRegion is an Image Segmentation Model, created by fine-tuning Mask R-CNN, which generates a mask for a given image. This repo is the Inference Server that can be used by Web Apps or Mobile Apps.","url":"https://github.com/SaiHemanthBR/SkyRegion","homepageUrl":"","updatedAt":"2021-06-19T11:41:39Z","stargazerCount":4,"forkCount":1,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U1MzU=","name":"Dockerfile","color":"#384d54"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":568},{"size":5388}]},"readme":{"text":"# Sky Region AI Inference Server on Flask\\n\\n  SkyRegion is an Image Segmentation Model, created by fine-tuning Mask R-CNN, which generates a mask for a given image. This repo is the Inference Server that can be used by Web Apps or Mobile Apps.\\n\\n  * ### Example Input:\\n    <img src=\\"images/input-1.png\\" width=\\"50%\\" />\\n\\n  * ### Output and Composite Image:\\n    <img src=\\"images/mask-1.png\\" width=\\"45%\\" /> &nbsp;&nbsp;&nbsp;\\n    <img src=\\"images/composite-1.png\\" width=\\"45%\\" />\\n    <br /> <br />\\n\\n    Composite generated by applying a blur effect using the mask. This makes it easier for the user to understand what\'s happening.\\n\\n  * Server IP: `<your-computer-ip>:8001`\\n\\n  * ## Installation\\n    \\n    * Install required packages <br />\\n      `pip3 install -r requirements.txt`\\n\\n    * Download models <br />\\n      `python3 download_models.py`\\n\\n    * Run Server <br />\\n      `python3 app.py`\\n\\n  * ## Installation (Docker) (Recommended)\\n\\n    * To Build: <br />\\n      `docker build -t sky-region -f docker/Dockerfile .`\\n    \\n    * To Run:<br />\\n      `docker run -d --rm -p 8001:8000 --name sky-region sky-region`\\n"},"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkyNDgxNjI3NTI=","name":"Sputify","nameWithOwner":"SaiHemanthBR/Sputify","description":"A simple online music player made using ReactJS (frontend) and Django (backend)","url":"https://github.com/SaiHemanthBR/Sputify","homepageUrl":"","updatedAt":"2020-04-10T14:52:14Z","stargazerCount":1,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML","color":"#e34c26"},{"id":"MDg6TGFuZ3VhZ2UzMDg=","name":"CSS","color":"#563d7c"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":799},{"size":4940},{"size":16773}]},"readme":null,"repositoryTopics":{"nodes":[]}},{"id":"MDEwOlJlcG9zaXRvcnkxNzEwMTg0MDI=","name":"TextClassifier-FlaskWebApp","nameWithOwner":"SaiHemanthBR/TextClassifier-FlaskWebApp","description":"Simple web app to classify movie reviews as good and bad. Trained on IMDb movie reviews.","url":"https://github.com/SaiHemanthBR/TextClassifier-FlaskWebApp","homepageUrl":"","updatedAt":"2020-12-16T03:40:14Z","stargazerCount":1,"forkCount":0,"isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML","color":"#e34c26"},{"id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python","color":"#3572A5"}],"edges":[{"size":2951},{"size":3848}]},"readme":null,"repositoryTopics":{"nodes":[{"topic":{"name":"tensorflow"}},{"topic":{"name":"keras"}},{"topic":{"name":"flask"}},{"topic":{"name":"webapp"}}]}},{"id":"MDEwOlJlcG9zaXRvcnkzMDAxNjgyNzY=","name":"Todo-ReactNative","nameWithOwner":"SaiHemanthBR/Todo-ReactNative","description":"A Simple Todo App made with Expo & ReactNative","url":"https://github.com/SaiHemanthBR/Todo-ReactNative","homepageUrl":"","updatedAt":"2021-06-19T11:44:29Z","stargazerCount":1,"forkCount":0,"isArchived":true,"isFork":false,"isInOrganization":false,"languages":{"nodes":[{"id":"MDg6TGFuZ3VhZ2UxNDA=","name":"JavaScript","color":"#f1e05a"},{"id":"MDg6TGFuZ3VhZ2UyODc=","name":"TypeScript","color":"#2b7489"}],"edges":[{"size":521},{"size":40903}]},"readme":{"text":"# Todo app\\n\\nA Simple Todo App made to teach myself Expo & ReactNative"},"repositoryTopics":{"nodes":[]}}]}}}}')},104:function(module,__webpack_exports__,__webpack_require__){"use strict";var _home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(50),_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(111),_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(140),configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(105),configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3___namespace=__webpack_require__.t(105,1),styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(132),styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(4),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);function About(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__.a,{maxWidth:"lg",className:"about-root",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"about-head",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h4",className:"about-title",children:"About Me"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("hr",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"about-content",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__.a,{maxWidth:"md",className:"about-terminal",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"title-bar",children:"saihemanthbr - aboutme"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"body",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dl",{children:configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3__.map((function(item,index){var result=item.preprocess?eval(item.preprocess)(item.result):item.result;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dd",{children:item.prompt},index),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dt",Object(_home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},item.result_attr),{},{children:result}),index)]})}))})})]})})]})}__webpack_exports__.a=About},105:function(e){e.exports=JSON.parse('[{"prompt":"Hemanth.origin","result":"\\"Hyderabad, Telangana, India\\""},{"prompt":"Hemanth.origin","result":[{"organization":"Oracle Corporation","job title":"Associate Software Engineer","location":"Hyderabad, Telangana, India","time":"Jul 2021 - Present"}],"preprocess":"(result) => JSON.stringify(result, null, 2)"},{"prompt":"Hemanth.education","result":{"institute":"CVR College of Engineering","major":"Computer Science and Engineering (CSE)","graduation":"2021"},"preprocess":"(result) => JSON.stringify(result, null, 2)"},{"prompt":"Hemanth.resume","result_attr":{"dangerouslySetInnerHTML":{"__html":"<a href={`${process.env.PUBLIC_URL}/static/resume.pdf`}>r\xe9sum\xe9.pdf</a>"}}},{"prompt":"Hemanth.contact.linkedin","result_attr":{"dangerouslySetInnerHTML":{"__html":"<a href=\'https://www.linkedin.com/in/saihemanthbr/\'>linkedin.com/in/saihemanthbr/</a>"}}},{"prompt":"Hemanth.age","preprocess":"() => Math.abs((new Date(Date.now() - (new Date(\'1999/07/15\')).getTime())).getUTCFullYear() - 1970)"},{"prompt":"Hemanth.languages","result":["English","Telugu","Hindi"],"preprocess":"(result) => JSON.stringify(result)"},{"prompt":"Hemanth.interests","result":["Coding","Cycling","Listening to Music","Reading Books"],"preprocess":"(result) => JSON.stringify(result)"},{"prompt":"Hemanth.strengths","result":["I Never Give Up","Autodidact","Quick Learner"],"preprocess":"(result) => JSON.stringify(result)"}]')},106:function(e){e.exports=JSON.parse('[{"id":"0","name":"Email","filename":"envelope-mark.svg","link":"mailto:sh.bheemreddy@gmail.com"},{"id":"1","name":"GitHub","filename":"github-mark.svg","link":"https://github.com/SaiHemanthBR"},{"id":"2","name":"LinkedIn","filename":"linkedin-mark.svg","link":"https://www.linkedin.com/in/saihemanthbr/"},{"id":"3","name":"Instagram","filename":"instagram-mark.svg","link":"https://www.instagram.com/saihemanthbr/"},{"id":"4","name":"Twitter","filename":"twitter-mark.svg","link":"https://twitter.com/BSaiHemanth"}]')},127:function(e,n,a){},128:function(e,n,a){},129:function(e,n,a){},131:function(e,n,a){},132:function(e,n,a){},133:function(e,n,a){},134:function(e,n,a){},135:function(e,n){},136:function(e,n,a){},137:function(e,n,a){"use strict";a.r(n);var t=a(0),i=a.n(t),o=a(13),r=a.n(o),s=a(80),d=a(182),l=a(183),c=a(140),m=a(179),h=a(181),u=a(97),p=a.n(u),g=a(4);var b=function(e){e.menuId;var n=e.mobileMenuId,a=e.onMobileMenuOpen,t=e.sections;return Object(g.jsxs)(g.Fragment,{children:[Object(g.jsx)("div",{className:"navbar-section-desktop",children:t.map((function(e){return Object(g.jsx)(m.a,{variant:"text",className:"navbar-button",href:"#".concat(e.id),children:e.name},e.id)}))}),Object(g.jsx)("div",{className:"navbar-section-mobile",children:Object(g.jsx)(h.a,{"aria-label":"show more","aria-controls":n,"aria-haspopup":"true",onClick:a,color:"inherit",children:Object(g.jsx)(p.a,{})})})]})},_=a(201),f=a(205);var O=function(e){var n=e.id,a=e.anchorEl,t=e.open,i=e.onClose,o=e.sections;return Object(g.jsx)(_.a,{anchorEl:a,anchorOrigin:{vertical:"top",horizontal:"right"},id:n,keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:t,onClose:i,children:o.map((function(e){return Object(g.jsx)(f.a,{children:e.name},e.id)}))})};var v=function(e){var n=e.id,a=e.anchorEl,t=e.open,i=e.onClose,o=e.sections;return Object(g.jsx)(_.a,{anchorEl:a,anchorOrigin:{vertical:"top",horizontal:"right"},id:n,keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:t,onClose:i,children:o.map((function(e){return Object(g.jsx)(f.a,{children:e.name},e.id)}))})};a(127);var k=function(e){var n=e.sections,a=Object(t.useState)(null),i=Object(s.a)(a,2),o=i[0],r=i[1],m=Object(t.useState)(null),h=Object(s.a)(m,2),u=h[0],p=h[1],_=Boolean(o),f=Boolean(u),k=function(){p(null)},w="dashboard-search-account-menu",y="dashboard-search-account-menu-mobile";return Object(g.jsxs)(g.Fragment,{children:[Object(g.jsx)(d.a,{position:"fixed",elevation:8,className:"navbar",children:Object(g.jsxs)(l.a,{children:[Object(g.jsx)(c.a,{className:"navbar-title",variant:"h6",noWrap:!0,children:"Sai Hemanth Bheemreddy"}),Object(g.jsx)("div",{className:"navbar-grow"}),Object(g.jsx)(b,{menuId:w,mobileMenuId:y,onMobileMenuOpen:function(e){p(e.currentTarget)},sections:n})]})}),Object(g.jsx)(v,{anchorEl:u,id:y,open:f,onClose:k,sections:n}),Object(g.jsx)(O,{anchorEl:o,id:w,open:_,onClose:function(){r(null),k()},sections:n})]})},w=a(186),y=a(98),j=a.n(y),S=a(184),x=a(185);a(128);var D=function(e){var n=e.window,a=e.goto,t=Object(S.a)({target:n?n():void 0,disableHysteresis:!0,threshold:300});return Object(g.jsx)(x.a,{in:t,children:Object(g.jsx)("div",{onClick:function(e){var n=(e.target.ownerDocument||document).querySelector("#".concat(a));n&&n.scrollIntoView({behavior:"smooth",block:"center"})},role:"presentation",className:"back-to-top-root",children:Object(g.jsx)(w.a,{color:"secondary",size:"medium","aria-label":"scroll back to top",children:Object(g.jsx)(j.a,{})})})})},M=function(e){return Math.floor(Math.random()*e)},A=a(78);a(129);var N=function(){var e=A[M(A.length)],n="".concat("","/images/heros/").concat(e.filename);return Object(g.jsxs)("div",{className:"hero-image",id:"hero-image",style:{backgroundImage:"url(".concat(n,")")},children:[Object(g.jsxs)("div",{className:"hero-text",style:{color:e.color},children:[Object(g.jsx)(c.a,{variant:"h4",component:"div",className:"hero-title-before",children:"Hello, My name is"}),Object(g.jsx)(c.a,{variant:"h1",component:"div",className:"hero-title",children:"Sai Hemanth Bheemreddy"}),Object(g.jsx)(c.a,{variant:"h4",component:"div",className:"hero-title-after",children:"I love engineering things for fun!"})]}),Object(g.jsxs)("div",{className:"hero-footer",style:{color:e.color},children:[Object(g.jsx)(c.a,{variant:"body1",gutterBottom:!0,className:"name",children:e.name}),Object(g.jsx)("div",{className:"flex-grow"}),Object(g.jsx)(c.a,{variant:"caption",gutterBottom:!0,className:"copyright",children:e.copyright})]})]})},T=a(203),E=a(111),R=a(187);var H=function(){return Object(g.jsx)(E.a,{maxWidth:"sm",className:"projects-loading-root",children:Object(g.jsxs)("div",{className:"projects-loading",children:[Object(g.jsx)(R.a,{color:"secondary",size:48,className:"spinner"}),Object(g.jsxs)(c.a,{variant:"caption",component:"div",className:"technical-message",children:["Loading projects from ",Object(g.jsx)("a",{href:"https://github.com/SaiHemanthBR",children:"github.com/SaiHemanthBR"}),"."]})]})})},F=a(70);var I=function(e){var n=e.error,a=F.titles,t=F.emojies,i=F.messages,o=a[M(a.length)],r=t[M(t.length)],s=i[M(i.length)];return Object(g.jsx)(E.a,{maxWidth:"sm",className:"projects-error-root",children:Object(g.jsxs)("div",{className:"projects-error",children:[Object(g.jsxs)(c.a,{variant:"h3",gutterBottom:!0,className:"title",children:[o," ",r]}),Object(g.jsx)(c.a,{variant:"h6",gutterBottom:!0,className:"message",children:s}),Object(g.jsxs)(c.a,{variant:"subtitle2",className:"technical-message",children:["Unable to retrive projects from ",Object(g.jsx)("a",{href:"https://github.com/SaiHemanthBR",children:"github.com/SaiHemanthBR"}),"."]}),Object(g.jsxs)(c.a,{variant:"caption",className:"error-message",children:["Error: ",n?n.message:"Unknown Error"]})]})})},P=a(44),C=a(188),B=a(189),z=a(190),U=a(191),W=a(192);var K=function(e){e.loading,e.data;var n=Object(P.a)();return Object(C.a)(n.breakpoints.up("lg"))?Object(g.jsx)(E.a,{className:"projects-list-root",maxWidth:"lg",children:Object(g.jsxs)(B.a,{container:!0,spacing:3,children:[Object(g.jsxs)(B.a,{item:!0,lg:6,className:"featured",children:[Object(g.jsxs)("div",{className:"title-root",children:[Object(g.jsx)(c.a,{variant:"h4",component:"div",className:"title",children:"Some Things I've Built"}),Object(g.jsx)(c.a,{variant:"caption",component:"div",gutterBottom:!0,className:"subtitle",children:"Featured Projects"})]}),Object(g.jsx)(z.a,{className:"repos-root",cols:1.2,cellHeight:256,children:[0,1,2,3,4,5,6,7,8,9].map((function(e){return Object(g.jsx)(U.a,{classes:{root:"repo-card-tile-root",tile:"repo-card-tile"},cols:1,rows:1,children:Object(g.jsx)(W.a,{className:"repo-card",elevation:2,children:e.toString().padStart(30,"0")})},e)}))})]}),Object(g.jsx)(B.a,{item:!0,lg:6,className:"other",children:Object(g.jsxs)("div",{className:"title-root",children:[Object(g.jsx)(c.a,{variant:"h4",component:"div",className:"title",children:"Other Projects"}),Object(g.jsxs)(c.a,{variant:"caption",component:"div",gutterBottom:!0,className:"subtitle",children:["View All Repositories on ",Object(g.jsx)("a",{href:"https://github.com/SaiHemanthBR",children:"My GitHub"})]})]})})]})}):Object(g.jsx)(g.Fragment,{children:"a"})},Z=a(50),L=a(199),G=a(202),V=a(108),$=a(99),J=Object(V.a)({uri:"https://api.github.com/graphql"}),q=Object($.a)((function(e,n){var a=n.headers;return{headers:Object(Z.a)(Object(Z.a)({},a),{},{authorization:"Bearer ".concat("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")})}})),X=new L.a({link:q.concat(J),cache:new G.a}),Y={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GithubReposQuery"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"user"},arguments:[{kind:"Argument",name:{kind:"Name",value:"login"},value:{kind:"StringValue",value:"SaiHemanthBR",block:!1}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pinnedItems"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"10"}},{kind:"Argument",name:{kind:"Name",value:"types"},value:{kind:"ListValue",values:[{kind:"EnumValue",value:"REPOSITORY"},{kind:"EnumValue",value:"GIST"}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Repository"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"repositories"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"100"}},{kind:"Argument",name:{kind:"Name",value:"privacy"},value:{kind:"EnumValue",value:"PUBLIC"}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"field"},value:{kind:"EnumValue",value:"NAME"}},{kind:"ObjectField",name:{kind:"Name",value:"direction"},value:{kind:"EnumValue",value:"ASC"}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameWithOwner"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"homepageUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"stargazerCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"forkCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isArchived"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isFork"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isInOrganization"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"languages"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"3"}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"field"},value:{kind:"EnumValue",value:"SIZE"}},{kind:"ObjectField",name:{kind:"Name",value:"direction"},value:{kind:"EnumValue",value:"ASC"}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"color"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"size"},arguments:[],directives:[]}]}}]}},{kind:"Field",alias:{kind:"Name",value:"readme"},name:{kind:"Name",value:"object"},arguments:[{kind:"Argument",name:{kind:"Name",value:"expression"},value:{kind:"StringValue",value:"master:README.md",block:!1}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Blob"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"text"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"repositoryTopics"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"100"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"topic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1053,source:{body:'query GithubReposQuery {\n  user(login: "SaiHemanthBR") {\n    pinnedItems(first: 10, types: [REPOSITORY, GIST]) {\n      edges {\n        node {\n          ... on Repository {\n            id\n          }\n        }\n      }\n    }\n    repositories(first: 100, privacy: PUBLIC, orderBy: {field: NAME, direction: ASC}) {\n      totalCount\n      nodes {\n        id\n        name\n        nameWithOwner\n        description\n        url\n        homepageUrl\n        updatedAt\n        stargazerCount\n        forkCount\n        isArchived\n        isFork\n        isInOrganization\n        languages(first: 3, orderBy: {field: SIZE, direction: ASC}) {\n          nodes {\n            id\n            name\n            color\n          }\n          edges {\n            size\n          }\n        }\n        readme: object(expression: "master:README.md") {\n          ... on Blob {\n            text\n          }\n        }\n        repositoryTopics(first: 100) {\n          nodes {\n            topic {\n              name\n            }\n            url\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}}}},Q=a(102);a(131);var ee=function(){var e=Object.fromEntries((window.location.href.split("?")[1]||"").split("&").map((function(e){return e.split("=")}))),n=Object(T.a)(Y,{skip:e.fixtures||!1}),a=n.loading,t=n.error,i=n.data;return e.fixtures&&(i=Q.data,a=!1),(a=e.fixtures?e.loading||!1:a)?Object(g.jsx)(H,{}):i?Object(g.jsx)(K,{loading:a,data:i}):Object(g.jsx)(I,{error:t})};var ne=function(){return Object(g.jsx)(g.Fragment,{children:"Skills"})},ae=a(104),te=a(196),ie=a(106);a(133);var oe=function(){var e="".concat("","/images/socials");return Object(g.jsx)("div",{className:"contact-root",children:Object(g.jsxs)(E.a,{maxWidth:"sm",className:"container",children:[Object(g.jsxs)("div",{className:"title-container",children:[Object(g.jsx)(c.a,{variant:"h3",gutterBottom:!0,align:"center",className:"title",children:"Get In Touch"}),Object(g.jsx)(c.a,{variant:"h6",gutterBottom:!0,align:"center",className:"subtitle",children:"My inbox is always open. Whether you have a question or just want to say hello, I'll try my best to get back to you! Feel free to DM me about any relevant job updates."})]}),Object(g.jsx)("div",{className:"social-container",children:ie.map((function(n){return Object(g.jsx)(W.a,{className:"social-card",elevation:4,children:Object(g.jsxs)(te.a,{className:"social-card-action",href:n.link,children:[Object(g.jsx)("img",{src:"".concat(e,"/").concat(n.filename),alt:"link to ".concat(n.name)}),Object(g.jsx)(c.a,{variant:"subtitle1",align:"center",component:"span",children:n.name})]})},n.id)}))})]})})},re={hero:Object(g.jsx)(N,{}),projects:Object(g.jsx)(ee,{}),skills:Object(g.jsx)(ne,{}),about:Object(g.jsx)(ae.a,{}),contact:Object(g.jsx)(oe,{})},se=a(71);a(134);var de=function(){return Object(g.jsxs)("div",{className:"App",children:[Object(g.jsx)(k,{sections:se.slice(1)}),Object(g.jsx)("div",{className:"container",children:se.map((function(e){return Object(g.jsx)("section",{id:e.id,className:"child",children:re[e.id]},e.id)}))}),Object(g.jsx)(D,{goto:se[0].id})]})},le=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,206)).then((function(n){var a=n.getCLS,t=n.getFID,i=n.getFCP,o=n.getLCP,r=n.getTTFB;a(e),t(e),i(e),o(e),r(e)}))},ce=a(197),me=a(200),he=a(198),ue=a(107),pe=(a(135),Object(ue.a)({palette:{primary:{light:"#434345",main:"#1C1C1E",dark:"#000000",contrastText:"#FFFFFF"},secondary:{light:"#69A8FF",main:"#007AFF",dark:"#004FCB",contrastText:"#FFFFFF"},error:{main:"#FF3B30"}},typography:{fontFamily:["-apple-system","BlinkMacSystemFont","'Helvetica Neue'","Roboto","'Segoe UI'","Oxygen","Ubuntu","Cantarell","'Open Sans'","sans-serif"].join(",")}}));a(136);r.a.render(Object(g.jsx)(ce.a,{theme:pe,children:Object(g.jsx)(me.b,{injectFirst:!0,children:Object(g.jsx)(he.a,{client:X,children:Object(g.jsx)(i.a.StrictMode,{children:Object(g.jsx)(de,{})})})})}),document.getElementById("root")),le(console.log)},70:function(e){e.exports=JSON.parse('{"titles":["Uh Oh!","Why? Why? Why?","Sigh","Oops-a-daisy","Oh Oh!"],"emojies":["\ud83d\ude2c","\ud83d\ude33","\ud83d\ude05","\ud83d\ude31","\ud83d\ude23","\ud83d\ude30","\ud83d\ude28"],"messages":["Looks like Github is taking a nap. Who can blame it? Well, I cant show you my billion dollar projects now. Sorry.","Github\'s ignoring me again. \ud83d\ude2d. Please github, how do I make up to you?","Oh, great another production bug. Someone\'s not sleeping today.","God, Almighty, Not again. What\'s wrong with my code?"]}')},71:function(e){e.exports=JSON.parse('[{"id":"hero","name":"Hero"},{"id":"about","name":"About"},{"id":"projects","name":"Projects"},{"id":"skills","name":"Skills"},{"id":"contact","name":"Contact"}]')},78:function(e){e.exports=JSON.parse('[{"id":"0","name":"Rocky Beach","filename":"rocky_beach.jpg","copyright":"","color":"#FFFFFF"},{"id":"1","name":"Starship SN10 Landing","filename":"starship_sn10_landing.jpg","copyright":"\xa9 SpaceX Inc.","color":"#000000"},{"id":"2","name":"Starship SN8 Launch","filename":"starship_sn8_launch.jpg","copyright":"\xa9 SpaceX Inc.","color":"#FFFFFF"},{"id":"3","name":"Starship SN8 on Test Stand","filename":"starship_sn8_stand.jpg","copyright":"\xa9 SpaceX Inc.","color":"#FFFFFF"},{"id":"4","name":"Planet Mars","filename":"mars.jpg","copyright":"\xa9 Martians? God?","color":"#FFFFFF"},{"id":"5","name":"macOS Monterey Wallpaper","filename":"monterey.jpg","copyright":"\xa9 Apple Inc. All rights reserved.","color":"#FFFFFF"},{"id":"6","name":"Palace of Westminster, London, UK","filename":"london.jpg","copyright":"\xa9 The Monarch? \ud83e\udd37","color":"#FFFFFF"},{"id":"7","name":"Night Sky","filename":"night_sky.jpg","copyright":"","color":"#FFFFFF"},{"id":"8","name":"Northern Lights, Astotin Lake, Canada","filename":"northern-lights.jpg","copyright":"\xa9 Serey Kim","color":"#FFFFFF"}]')}},[[137,1,2]]]);
//# sourceMappingURL=main.2dd11a88.chunk.js.map