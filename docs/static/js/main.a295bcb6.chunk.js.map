{"version":3,"sources":["contents/sections/about/index.tsx","contents/navbar/Toolbar.tsx","contents/navbar/ToolbarMenu.tsx","contents/navbar/ToolbarMobileMenu.tsx","contents/navbar/index.tsx","contents/back-to-top/index.tsx","contents/sections/hero/index.tsx","apps/helpers/index.ts","apps/sections/projects/index.ts","contents/sections/projects/index.tsx","contents/sections/skills/index.tsx","contents/sections/contact/index.tsx","contents/sections/index.tsx","contents/App.tsx","apps/vitals/reportWebVitals.ts","apps/theme.ts","apps/graphql/index.ts","contents/index.tsx"],"names":["About","maxWidth","className","variant","about_json","map","item","index","result","preprocess","eval","prompt","result_attr","Toolbar","menuId","mobileMenuId","onMobileMenuOpen","sections","section","Button","href","id","name","IconButton","onClick","color","ToolbarMenu","anchorEl","open","onClose","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","ToolbarMobileMenu","NavBar","useState","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","AppBar","position","elevation","Typography","noWrap","event","currentTarget","BackToTop","window","goto","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Fab","size","Hero","max","hero","heros","length","Math","floor","random","backgroundImage","process","filename","style","Container","component","gutterBottom","copyright","get_projects","a","axios","get","res","data","pinned_repos","other_repos","user","repositories","nodes","forEach","node","pinnedItems","edges","some","pinned_node","push","Projects","queryParams","Object","fromEntries","location","split","fixtures","setProjects","useEffect","then","Skills","Contact","social_icon_baseurl","align","socials","social","Card","CardActionArea","link","src","alt","SectionComponents","App","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","error","typography","fontFamily","join","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","graphqlClient","ApolloClient","concat","cache","InMemoryCache","ReactDOM","render","ThemeProvider","StylesProvider","injectFirst","ApolloProvider","client","StrictMode","getElementById","console","log"],"mappings":"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","file":"static/js/main.a295bcb6.chunk.js","sourcesContent":["import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport about_json from \"configs/sections/about/index.json\"\nimport \"styles/sections/about/index.scss\"\n\nfunction About() {\n  return (\n    <Container maxWidth=\"lg\" className=\"about-root\">\n      <div className=\"about-head\">\n        <Typography variant=\"h4\" className=\"about-title\">About Me</Typography>\n      </div>\n      <hr />\n      <div className=\"about-content\">\n        <Container maxWidth=\"md\" className=\"about-terminal\">\n          <div className=\"title-bar\">saihemanthbr - aboutme</div>\n          <div className=\"body\">\n            <dl>\n              {\n                about_json.map((item, index) => {\n                  /* eslint no-eval: 0 */\n                  let result = (item.preprocess) ? eval(item.preprocess)(item.result) : item.result;\n                  return (\n                    <>\n                      <dd key={index}>{item.prompt}</dd>\n                      <dt key={index} {...item.result_attr}>\n                        {result}\n                      </dt>\n                    </>\n                  );\n                })\n              }\n            </dl>\n          </div>\n        </Container>\n      </div>\n    </Container>\n  );\n}\n\nexport default About;\n","import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Section } from 'apps/types';\n\ntype ToolbarProps = {\n  menuId: string;\n  mobileMenuId: string;\n  onMobileMenuOpen: (event: React.MouseEvent<HTMLElement>) => void;\n  sections: Array<Section>;\n};\n\nfunction Toolbar({menuId, mobileMenuId, onMobileMenuOpen, sections}: ToolbarProps) {\n  return (\n    <>\n      <div className='navbar-section-desktop'>\n        {sections.map((section) =>\n          <Button key={section.id} variant=\"text\" className=\"navbar-button\" href={`#${section.id}`}>{section.name}</Button>\n        )}\n      </div>\n\n      <div className='navbar-section-mobile'>\n        <IconButton\n          aria-label=\"show more\"\n          aria-controls={mobileMenuId}\n          aria-haspopup=\"true\"\n          onClick={onMobileMenuOpen}\n          color=\"inherit\"\n        >\n          <MoreIcon />\n        </IconButton>\n      </div>\n    </>\n  )\n}\n\nexport default Toolbar;\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Section } from 'apps/types';\n\ntype ToolbarMenuProps = {\n  id: string;\n  anchorEl: null | Element | ((element: Element) => Element);\n  open: boolean;\n  onClose: () => void;\n  sections: Array<Section>;\n}\n\nfunction ToolbarMenu({ id, anchorEl, open, onClose, sections }: ToolbarMenuProps) {\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={id}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={open}\n      onClose={onClose}\n    >\n      {sections.map((section) =>\n        <MenuItem key={section.id}>{section.name}</MenuItem>\n      )}\n    </Menu>\n  );\n}\n\nexport default ToolbarMenu;\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Section } from 'apps/types';\n\ntype ToolbarMobileMenuProps = {\n  id: string;\n  anchorEl: null | Element | ((element: Element) => Element);\n  open: boolean;\n  onClose: () => void;\n  sections: Array<Section>;\n}\n\nfunction ToolbarMobileMenu({ id, anchorEl, open, onClose, sections }: ToolbarMobileMenuProps) {\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={id}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={open}\n      onClose={onClose}\n    >\n      {sections.map((section) =>\n        <MenuItem key={section.id}>{section.name}</MenuItem>\n      )}\n    </Menu>\n  );\n}\n\nexport default ToolbarMobileMenu;\n","import { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { default as NavBarToolbar } from './Toolbar'\nimport { default as NavBarToolbarMenu } from './ToolbarMenu'\nimport { default as NavBarToolbarMobileMenu } from './ToolbarMobileMenu'\n\nimport { Section } from 'apps/types';\n\nimport 'styles/navbar/index.scss';\n\ntype NavBarProps = {\n  sections: Array<Section>;\n}\n\nfunction NavBar({ sections }: NavBarProps) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'dashboard-search-account-menu';\n  const mobileMenuId = 'dashboard-search-account-menu-mobile';\n\n  return (\n    <>\n      <AppBar position=\"fixed\" elevation={8} className=\"navbar\">\n        <Toolbar>\n          <Typography className='navbar-title' variant=\"h6\" noWrap>Sai Hemanth Bheemreddy</Typography>\n          <div className='navbar-grow' />\n\n          <NavBarToolbar\n            menuId={menuId}\n            mobileMenuId={mobileMenuId}\n            onMobileMenuOpen={handleMobileMenuOpen}\n            sections={sections}\n          />\n        </Toolbar>\n      </AppBar>\n\n      <NavBarToolbarMobileMenu\n        anchorEl={mobileMoreAnchorEl}\n        id={mobileMenuId}\n        open={isMobileMenuOpen}\n        onClose={handleMobileMenuClose}\n        sections={sections}\n      />\n\n      <NavBarToolbarMenu\n        anchorEl={anchorEl}\n        id={menuId}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n        sections={sections}\n      />\n    </>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport 'styles/back-to-top/index.scss';\n\ntype BackToTopProps = {\n  window?: () => Window;\n  goto: string;\n}\n\nfunction BackToTop({ window, goto }: BackToTopProps) {\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 300,\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\n      `#${goto}`,\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className='back-to-top-root'>\n        <Fab color=\"secondary\" size=\"medium\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default BackToTop;\n","import Typography from \"@material-ui/core/Typography\";\nimport Container from '@material-ui/core/Container';\nimport { getRandomInt } from 'apps/helpers';\n\nimport heros from 'configs/sections/hero/index.json';\nimport 'styles/sections/hero/index.scss';\n\nfunction Hero() {\n  const hero = heros[getRandomInt(heros.length)];\n  const backgroundImage = `${process.env.PUBLIC_URL}/images/heros/${hero.filename}`;\n\n  return (\n    <div className=\"hero-image\" id=\"hero-image\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <Container maxWidth=\"xl\" className=\"hero-text\" style={{ color: hero.color }}>\n        <Typography variant=\"h4\" component=\"div\" className=\"hero-title-before\">Hello, My name is</Typography>\n        <Typography variant=\"h1\" component=\"div\" className=\"hero-title\">Sai Hemanth Bheemreddy</Typography>\n        <Typography variant=\"h4\" component=\"div\" className=\"hero-title-after\">I love engineering things for fun!</Typography>\n      </Container>\n\n      <div className=\"hero-footer\" style={{ color: hero.color }}>\n        <Typography variant=\"body1\" gutterBottom className=\"name\">{hero.name}</Typography>\n        <div className=\"flex-grow\"></div>\n        <Typography variant=\"caption\" gutterBottom className=\"copyright\">{hero.copyright}</Typography>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","export const getRandomInt = (max: number) => {\n  return Math.floor(Math.random() * max);\n}\n","import axios from \"axios\";\nimport { Repository, GithubAPIResponse, ProjectsData } from 'apps/types';\n\nexport const get_projects = async () => {\n  const res = (await axios.get<GithubAPIResponse>('https://saihemanthbr-public.s3.ap-south-1.amazonaws.com/saihemanthbr-github-io/projects.json'));\n  const data = res.data.data;\n\n  const pinned_repos: Repository[] = [];\n  const other_repos: Repository[] = [];\n\n  data.user.repositories.nodes.forEach((node) => {\n    if(data.user.pinnedItems.edges.some((pinned_node) => pinned_node.node.id === node.id)) {\n      pinned_repos.push(node);\n    } else {\n      other_repos.push(node);\n    }\n  });\n\n  return {pinned_repos, other_repos} as ProjectsData;\n}\n","import { useState, useEffect } from 'react';\nimport { get_projects } from 'apps/sections/projects';\n\nimport fixtures from 'configs/sections/projects/list.json';\nimport 'styles/sections/projects/index.scss';\nimport { ProjectsData } from 'apps/types';\n\nfunction Projects() {\n  const queryParams = Object.fromEntries((window.location.href.split('?')[1] || '').split('&').map((item) => item.split('=')))\n  const [projects, setProjects] = useState(queryParams.fixtures ? (fixtures as ProjectsData) : null);\n\n  useEffect(() => {\n    if(queryParams.fixtures) return;\n\n    get_projects().then(data => setProjects(data));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // TODO: Create UI\n  return (\n    <>Projects</>\n  );\n}\n\nexport default (Projects);\n","function Skills() {\n  return (\n    <>Skills</>\n  );\n}\n\nexport default Skills;\n","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nimport socials from 'configs/sections/contact/index.json';\nimport \"styles/sections/contact/index.scss\";\n\nfunction Contact() {\n  const social_icon_baseurl = `${process.env.PUBLIC_URL}/images/socials`\n\n  return (\n    <div className=\"contact-root\">\n      <Container maxWidth=\"sm\" className=\"contact-container\">\n        <div className=\"title-container\">\n          <Typography variant=\"h3\" gutterBottom align=\"center\" className=\"title\">Get In Touch</Typography>\n          <Typography variant=\"h6\" gutterBottom align=\"center\" className=\"subtitle\">\n            My inbox is always open. Whether you have a question or just want to say hello, I'll try my best to get back to you! Feel free to DM me about any relevant job updates.\n          </Typography>\n        </div>\n\n        <div className=\"social-container\">\n          {socials.map((social) =>\n            <Card key={social.id} className=\"social-card\" elevation={4}>\n              <CardActionArea className=\"social-card-action\" href={social.link}>\n                <img src={`${social_icon_baseurl}/${social.filename}`} alt={`link to ${social.name}`} />\n                <Typography variant=\"subtitle1\" align=\"center\" component=\"span\">{social.name}</Typography>\n              </CardActionArea>\n            </Card>\n          )}\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Contact;\n","import Hero from \"./hero\";\nimport Projects from \"./projects\";\nimport Skills from \"./skills\";\nimport About from \"./about\";\nimport Contact from \"./contact\";\n\nexport const SectionComponents: { [key: string]: JSX.Element; }  = {\n  \"hero\": <Hero />,\n  \"projects\": <Projects />,\n  \"skills\": <Skills />,\n  \"about\": <About />,\n  \"contact\": <Contact />,\n}\n","import NavBar from 'contents/navbar';\nimport BackToTop from 'contents/back-to-top';\nimport {SectionComponents} from 'contents/sections';\n\nimport sections from 'configs/sections/index.json';\nimport 'styles/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar\n        sections={sections.slice(1)}\n      />\n\n      <div className=\"container\">\n        {sections.map((section) =>\n          <section key={section.id} id={section.id} className=\"child\">{SectionComponents[section.id]}</section>\n        )}\n      </div>\n\n      <BackToTop goto={sections[0].id} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport './declarations.d';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { \n      light: '#434345',\n      main: '#1C1C1E',\n      dark: '#000000',\n      contrastText: '#FFFFFF'\n    },\n    secondary: { \n      light: '#69A8FF',\n      main: '#007AFF',\n      dark: '#004FCB',\n      contrastText: '#FFFFFF'\n    },\n    error: { \n      main: '#FF3B30' \n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"'Helvetica Neue'\",\n      \"Roboto\",\n      \"'Segoe UI'\",\n      \"Oxygen\",\n      \"Ubuntu\",\n      \"Cantarell\",\n      \"'Open Sans'\",\n      \"sans-serif\"\n    ].join(','),\n  },\n})\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { createHttpLink } from '@apollo/client/link/http';\nimport { setContext } from '@apollo/client/link/context';\nimport { loader } from 'graphql.macro';\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_GRAPHQL_URL\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${process.env.REACT_APP_GITHUB_TOKEN}`,\n    }\n  }\n});\n\nexport const graphqlClient = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport const GithubReposQuery = loader('./projects.graphql');\nexport * from '.';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'contents/App';\nimport reportWebVitals from 'apps/vitals/reportWebVitals';\nimport { StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { ApolloProvider } from \"@apollo/client\";\n\nimport { theme } from 'apps/theme'\nimport { graphqlClient } from 'apps/graphql';\n\nimport 'styles/index.scss';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <StylesProvider injectFirst>\n      <ApolloProvider client={graphqlClient}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ApolloProvider>\n    </StylesProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}