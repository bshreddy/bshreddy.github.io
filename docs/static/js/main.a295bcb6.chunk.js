(this["webpackJsonpsaihemanthbr.github.io"]=this["webpackJsonpsaihemanthbr.github.io"]||[]).push([[0],{104:function(e){e.exports=JSON.parse('{"pinned_repos":[{"__typename":"Repository","description":null,"forkCount":2,"homepageUrl":null,"id":"MDEwOlJlcG9zaXRvcnkyODQyMzM2NTU=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[],"nodes":[]},"name":"Kushagra","nameWithOwner":"SaiHemanthBR/Kushagra","readme":{"__typename":"Blob","text":"# Kushagra - AI-powered Mobile App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\n<br>\\n\\n## Submodules\\n  |Repository|Description|\\n  |----------|-----------|\\n  |[AI](https://github.com/SaiHemanthBR/Kushagra-AI/)|Inference Server for Image Classification Model.|\\n  |[iOS](https://github.com/SaiHemanthBR/Kushagra-iOS/)|iOS Application developed in this project.|\\n  |[Android](https://github.com/SaiHemanthBR/Kushagra-Android/)|Android Application developed in this project.|\\n  |[Report](https://github.com/SaiHemanthBR/Kushagra-Report/)|Repository for the academic report that was submited with this project.|\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-02-25T18:42:16Z","url":"https://github.com/SaiHemanthBR/Kushagra"},{"__typename":"Repository","description":"Nano Web Server is a simple, multi-threaded, web server written using POSIX Sockets.","forkCount":0,"homepageUrl":"https://saihemanthbr.github.io/nanows/html/","id":"MDEwOlJlcG9zaXRvcnkzMjUzMDYyNDk=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":108},{"__typename":"LanguageEdge","size":109},{"__typename":"LanguageEdge","size":239}],"nodes":[{"__typename":"Language","color":"#f1e05a","id":"MDg6TGFuZ3VhZ2UxNDA=","name":"JavaScript"},{"__typename":"Language","color":"#89e051","id":"MDg6TGFuZ3VhZ2UxMzk=","name":"Shell"},{"__typename":"Language","color":"#563d7c","id":"MDg6TGFuZ3VhZ2UzMDg=","name":"CSS"}]},"name":"nanows","nameWithOwner":"SaiHemanthBR/nanows","readme":{"__typename":"Blob","text":"# Nano Web Server\\n\\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](./LICENSE.md)\\n\\nNano Web Server is a simple, multi-threaded, web server written using POSIX Sockets. Uses a process-driven approach and creates a new thread for each request. This web server can only host simple static webpages with no server-size processing. As of v2, it does not conform to any HTTP protocol. This is a learning project and is not intended to be used in a production environment.\\n\\nI might implement HTTP protocol standards later, but no guarantees.\\n"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"webserver"},"url":"https://github.com/topics/webserver"},{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"sockets"},"url":"https://github.com/topics/sockets"}]},"stargazerCount":1,"updatedAt":"2021-08-08T14:28:58Z","url":"https://github.com/SaiHemanthBR/nanows"},{"__typename":"Repository","description":"Personal Website.","forkCount":0,"homepageUrl":"https://saihemanthbr.github.io","id":"MDEwOlJlcG9zaXRvcnkyNDk0OTU2MTE=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":2055},{"__typename":"LanguageEdge","size":16320},{"__typename":"LanguageEdge","size":19410}],"nodes":[{"__typename":"Language","color":"#e34c26","id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML"},{"__typename":"Language","color":"#c6538c","id":"MDg6TGFuZ3VhZ2U2MDU=","name":"SCSS"},{"__typename":"Language","color":"#2b7489","id":"MDg6TGFuZ3VhZ2UyODc=","name":"TypeScript"}]},"name":"saihemanthbr.github.io","nameWithOwner":"SaiHemanthBR/saihemanthbr.github.io","readme":{"__typename":"Blob","text":"# Personal Website"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":2,"updatedAt":"2021-08-15T14:27:38Z","url":"https://github.com/SaiHemanthBR/saihemanthbr.github.io"},{"__typename":"Repository","description":"A simple online music player made using ReactJS (frontend) and Django (backend)","forkCount":0,"homepageUrl":"","id":"MDEwOlJlcG9zaXRvcnkyNDgxNjI3NTI=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":799},{"__typename":"LanguageEdge","size":4940},{"__typename":"LanguageEdge","size":16773}],"nodes":[{"__typename":"Language","color":"#e34c26","id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML"},{"__typename":"Language","color":"#563d7c","id":"MDg6TGFuZ3VhZ2UzMDg=","name":"CSS"},{"__typename":"Language","color":"#3572A5","id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python"}]},"name":"Sputify","nameWithOwner":"SaiHemanthBR/Sputify","readme":null,"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-07-27T13:39:22Z","url":"https://github.com/SaiHemanthBR/Sputify"}],"other_repos":[{"__typename":"Repository","description":"An AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.","forkCount":1,"homepageUrl":"","id":"MDEwOlJlcG9zaXRvcnkyNTQ0MjUyNjQ=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":494},{"__typename":"LanguageEdge","size":4723}],"nodes":[{"__typename":"Language","color":"#384d54","id":"MDg6TGFuZ3VhZ2U1MzU=","name":"Dockerfile"},{"__typename":"Language","color":"#3572A5","id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python"}]},"name":"Kushagra-AI","nameWithOwner":"SaiHemanthBR/Kushagra-AI","readme":{"__typename":"Blob","text":"# Kushagra - AI-powered Mobile App - Inference Server\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the Inference Server that performs image classification on images captured by the user.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n## Endpoints\\n  * [POST] `/crop` - classifies image into one of 10 crop classes. <br>\\n    ```Content-Type: multipart/form-data```\\n    \\n    Query Parameters <br>\\n    |Parameter|Description|Type|\\n    |---------|-----------|----|\\n    |img|Image of the crop that needs to be classfied.|Image File|\\n    \\n    <br>\\n\\n    Response Object <br>\\n    |Object|Data Type|Description|\\n    |------|---------|-----------|\\n    |pred|integer|Index of Predicted Class. (Index of largest element in `cnf` array.)|\\n    |cnf|array[double]|Confidence of prediction for each index. values of Softmax of last layer of the ResNet model.|\\n    |kind|string|Value: `\\"crop\\"`<br>Kind of prediction. (crop\\\\|disease)|\\n\\n\\n    <br><br>\\n\\n  * [POST] `/disease` - classifies image into one of 37 crop diseases. <br>\\n    ```Content-Type: multipart/form-data```\\n    \\n    Query Parameters <br>\\n    |Parameter|Description|Type|\\n    |---------|-----------|----|\\n    |img|Image of the crop that needs to be classfied.|Image File|\\n\\n    <br>\\n\\n    Response Object <br>\\n    |Object|Data Type|Description|\\n    |------|---------|-----------|\\n    |pred|integer|Index of Predicted Class. (Index of largest element in `cnf` array.)|\\n    |cnf|array[double]|LogSoftmax values of last layer of the ResNet model.|\\n    |kind|string|Value: `\\"disease\\"`<br>Kind of prediction. (crop\\\\|disease)|\\n\\n    <br><br>\\n\\n## Installation (Docker) (Recommended)\\n  1. To Build: <br />\\n      `docker build -t crop-prediction -f docker/Dockerfile .`\\n    \\n  2. To Run:<br />\\n      `docker run -d --rm -p 8000:8000 --name crop-prediction crop-prediction`\\n\\n## Installation\\n  1. Install required packages <br />\\n      `pip3 install -r requirements.txt`\\n\\n  2. Download models <br />\\n      `python3 download_models.py`\\n\\n  3. Run Server <br />\\n      `python3 app.py`\\n\\n<br><br>\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2020-08-16T18:23:45Z","url":"https://github.com/SaiHemanthBR/Kushagra-AI"},{"__typename":"Repository","description":null,"forkCount":1,"homepageUrl":null,"id":"MDEwOlJlcG9zaXRvcnkyMzkxODk2ODc=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":100186}],"nodes":[{"__typename":"Language","color":"#b07219","id":"MDg6TGFuZ3VhZ2UxNTg=","name":"Java"}]},"name":"Kushagra-Android","nameWithOwner":"SaiHemanthBR/Kushagra-Android","readme":{"__typename":"Blob","text":"# Kushagra - AI-powered Mobile App - Android App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the Android Mobile App developed in this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n\x3c!-- ## Screenshots --\x3e\\n\x3c!-- Added Screenshots here --\x3e\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-01-17T11:59:15Z","url":"https://github.com/SaiHemanthBR/Kushagra-Android"},{"__typename":"Repository","description":null,"forkCount":1,"homepageUrl":null,"id":"MDEwOlJlcG9zaXRvcnkyNDIxNzM4NTU=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":660},{"__typename":"LanguageEdge","size":7758},{"__typename":"LanguageEdge","size":120708}],"nodes":[{"__typename":"Language","color":"#701516","id":"MDg6TGFuZ3VhZ2UxNDE=","name":"Ruby"},{"__typename":"Language","color":"#e34c26","id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML"},{"__typename":"Language","color":"#F05138","id":"MDg6TGFuZ3VhZ2UzNzE=","name":"Swift"}]},"name":"Kushagra-iOS","nameWithOwner":"SaiHemanthBR/Kushagra-iOS","readme":{"__typename":"Blob","text":"# Kushagra - AI-powered Mobile App - iOS App\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the iOS/iPadOS App developed in this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n\x3c!-- ## Screenshots --\x3e\\n\x3c!-- Added Screenshots here --\x3e\\n\\n<br><br>\\n\\n> For more implementation details, please read the report at [github.com/SaiHemanthBR/Kushagra-Report](https://github.com/SaiHemanthBR/Kushagra-Report)\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-02-25T18:33:26Z","url":"https://github.com/SaiHemanthBR/Kushagra-iOS"},{"__typename":"Repository","description":null,"forkCount":1,"homepageUrl":null,"id":"MDEwOlJlcG9zaXRvcnkyNzM1Njc4NTg=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":50556}],"nodes":[{"__typename":"Language","color":"#3D6117","id":"MDg6TGFuZ3VhZ2UzMTg=","name":"TeX"}]},"name":"Kushagra-Report","nameWithOwner":"SaiHemanthBR/Kushagra-Report","readme":{"__typename":"Blob","text":"# Kushagra - AI-powered Mobile App - Report\\n\\nAn AI-powered mobile crop advisory app for farmers, gardeners that can provide information about crops using an image taken by the user. This supports 10 crops and 37 kinds of crop diseases. The AI model is a ResNet network that has been fine-tuned using crop images that were collected by web-scraping from Google Images and Plant-Village Dataset.\\n\\nThis repository is the academic report that was submited with this project.\\n\\nMain Project Repo: [https://github.com/SaiHemanthBR/Kushagra](https://github.com/SaiHemanthBR/Kushagra)\\n\\n<br><br>\\n\\n## Contributers\\n  * [SaiHemanthBR](https://github.com/SaiHemanthBR/)\\n  * [nikhiltadikonda](https://github.com/nikhiltadikonda/)\\n  * [Kalyan1999](https://github.com/Kalyan1999/)"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-01-17T11:51:35Z","url":"https://github.com/SaiHemanthBR/Kushagra-Report"},{"__typename":"Repository","description":null,"forkCount":0,"homepageUrl":null,"id":"MDEwOlJlcG9zaXRvcnkyNTAxOTIzNjM=","isArchived":true,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":1188},{"__typename":"LanguageEdge","size":7637},{"__typename":"LanguageEdge","size":23466}],"nodes":[{"__typename":"Language","color":"#8f14e9","id":"MDg6TGFuZ3VhZ2U0ODc=","name":"Metal"},{"__typename":"Language","color":"#F05138","id":"MDg6TGFuZ3VhZ2UzNzE=","name":"Swift"},{"__typename":"Language","color":"#3572A5","id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python"}]},"name":"PhysicsSims","nameWithOwner":"SaiHemanthBR/PhysicsSims","readme":{"__typename":"Blob","text":"# Physics Simulations\\n\\n  * Motion in 1D\\n    * Ball in Free Fall -- \u2705\\n    * Landing a rocket\\n    * Relative velocity: race on a moving sidewalk\\n  \\n  * Motion in 2D\\n    * Race between a dropped ball and one launched horizontally\\n    * A ballistics cart\\n    * Projectile Motion \\n    * The monkey and the hunter\\n    * Motion with Constant Acceleration\\n  \\n  * Forces\\n    * Force and motion in 1D\\n    * The normal force\\n    * Static friction\\n    * Elevator physics\\n    * Atwood\'s machine\\n    * Force and motion in 1D, with friction\\n    * Friction on an incline\\n  \\n  * Circular motion\\n    * Circular motion\\n    * A ball on a string\\n    * A disk on a turntable\\n    * Gravitron (carnival ride model)\\n    * Car on a banked turn\\n\\n  * Harmonic Motion\\n    * Pendulum -- \u2705\\n    * Double Pendulum -- \u2705\\n    * Spring Pendulum -- \u2705\\n    * Pendulum - with Damping -- \u2705\\n    * Spring Wave\\n  \\n  * Experiments\\n    * Havana Song Synth -- \u2705\\n  \\n  * Renderings\\n    * Mandelbrot Set -- Pan & Zoom remaining"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-06-23T12:55:25Z","url":"https://github.com/SaiHemanthBR/PhysicsSims"},{"__typename":"Repository","description":"SkyRegion is an Image Segmentation Model, created by fine-tuning Mask R-CNN, which generates a mask for a given image. This repo is the Inference Server that can be used by Web Apps or Mobile Apps.","forkCount":1,"homepageUrl":"","id":"MDEwOlJlcG9zaXRvcnkyNTQ2NTI2ODQ=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":568},{"__typename":"LanguageEdge","size":5388}],"nodes":[{"__typename":"Language","color":"#384d54","id":"MDg6TGFuZ3VhZ2U1MzU=","name":"Dockerfile"},{"__typename":"Language","color":"#3572A5","id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python"}]},"name":"SkyRegion","nameWithOwner":"SaiHemanthBR/SkyRegion","readme":{"__typename":"Blob","text":"# Sky Region AI Inference Server on Flask\\n\\n  SkyRegion is an Image Segmentation Model, created by fine-tuning Mask R-CNN, which generates a mask for a given image. This repo is the Inference Server that can be used by Web Apps or Mobile Apps.\\n\\n  * ### Example Input:\\n    <img src=\\"images/input-1.png\\" width=\\"50%\\" />\\n\\n  * ### Output and Composite Image:\\n    <img src=\\"images/mask-1.png\\" width=\\"45%\\" /> &nbsp;&nbsp;&nbsp;\\n    <img src=\\"images/composite-1.png\\" width=\\"45%\\" />\\n    <br /> <br />\\n\\n    Composite generated by applying a blur effect using the mask. This makes it easier for the user to understand what\'s happening.\\n\\n  * Server IP: `<your-computer-ip>:8001`\\n\\n  * ## Installation\\n    \\n    * Install required packages <br />\\n      `pip3 install -r requirements.txt`\\n\\n    * Download models <br />\\n      `python3 download_models.py`\\n\\n    * Run Server <br />\\n      `python3 app.py`\\n\\n  * ## Installation (Docker) (Recommended)\\n\\n    * To Build: <br />\\n      `docker build -t sky-region -f docker/Dockerfile .`\\n    \\n    * To Run:<br />\\n      `docker run -d --rm -p 8001:8000 --name sky-region sky-region`\\n"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":4,"updatedAt":"2021-06-19T11:41:39Z","url":"https://github.com/SaiHemanthBR/SkyRegion"},{"__typename":"Repository","description":"Simple web app to classify movie reviews as good and bad. Trained on IMDb movie reviews.","forkCount":0,"homepageUrl":"","id":"MDEwOlJlcG9zaXRvcnkxNzEwMTg0MDI=","isArchived":false,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":2951},{"__typename":"LanguageEdge","size":3848}],"nodes":[{"__typename":"Language","color":"#e34c26","id":"MDg6TGFuZ3VhZ2U0MTc=","name":"HTML"},{"__typename":"Language","color":"#3572A5","id":"MDg6TGFuZ3VhZ2UxNDU=","name":"Python"}]},"name":"TextClassifier-FlaskWebApp","nameWithOwner":"SaiHemanthBR/TextClassifier-FlaskWebApp","readme":null,"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"tensorflow"},"url":"https://github.com/topics/tensorflow"},{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"keras"},"url":"https://github.com/topics/keras"},{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"flask"},"url":"https://github.com/topics/flask"},{"__typename":"RepositoryTopic","topic":{"__typename":"Topic","name":"webapp"},"url":"https://github.com/topics/webapp"}]},"stargazerCount":1,"updatedAt":"2020-12-16T03:40:14Z","url":"https://github.com/SaiHemanthBR/TextClassifier-FlaskWebApp"},{"__typename":"Repository","description":"A Simple Todo App made with Expo & ReactNative","forkCount":0,"homepageUrl":"","id":"MDEwOlJlcG9zaXRvcnkzMDAxNjgyNzY=","isArchived":true,"isFork":false,"isInOrganization":false,"languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","size":521},{"__typename":"LanguageEdge","size":40903}],"nodes":[{"__typename":"Language","color":"#f1e05a","id":"MDg6TGFuZ3VhZ2UxNDA=","name":"JavaScript"},{"__typename":"Language","color":"#2b7489","id":"MDg6TGFuZ3VhZ2UyODc=","name":"TypeScript"}]},"name":"Todo-ReactNative","nameWithOwner":"SaiHemanthBR/Todo-ReactNative","readme":{"__typename":"Blob","text":"# Todo app\\n\\nA Simple Todo App made to teach myself Expo & ReactNative"},"repositoryTopics":{"__typename":"RepositoryTopicConnection","nodes":[]},"stargazerCount":1,"updatedAt":"2021-06-19T11:44:29Z","url":"https://github.com/SaiHemanthBR/Todo-ReactNative"}]}')},105:function(module,__webpack_exports__,__webpack_require__){"use strict";var _home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(46),_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(116),_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(162),configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(106),configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3___namespace=__webpack_require__.t(106,1),styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(154),styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(styles_sections_about_index_scss__WEBPACK_IMPORTED_MODULE_4__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(4),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);function About(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__.a,{maxWidth:"lg",className:"about-root",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"about-head",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h4",className:"about-title",children:"About Me"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("hr",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"about-content",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__.a,{maxWidth:"md",className:"about-terminal",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"title-bar",children:"saihemanthbr - aboutme"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"body",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dl",{children:configs_sections_about_index_json__WEBPACK_IMPORTED_MODULE_3__.map((function(item,index){var result=item.preprocess?eval(item.preprocess)(item.result):item.result;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dd",{children:item.prompt},index),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("dt",Object(_home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_home_runner_work_saihemanthbr_github_io_saihemanthbr_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},item.result_attr),{},{children:result}),index)]})}))})})]})})]})}__webpack_exports__.a=About},106:function(e){e.exports=JSON.parse('[{"prompt":"Hemanth.origin","result":"\\"Hyderabad, Telangana, India\\""},{"prompt":"Hemanth.origin","result":[{"organization":"Oracle Corporation","job title":"Associate Software Engineer","location":"Hyderabad, Telangana, India","time":"Jul 2021 - Present"}],"preprocess":"(result) => JSON.stringify(result, null, 2)"},{"prompt":"Hemanth.education","result":{"institute":"CVR College of Engineering","major":"Computer Science and Engineering (CSE)","graduation":"2021"},"preprocess":"(result) => JSON.stringify(result, null, 2)"},{"prompt":"Hemanth.resume","result_attr":{"dangerouslySetInnerHTML":{"__html":"<a href={`${process.env.PUBLIC_URL}/static/resume.pdf`}>r\xe9sum\xe9.pdf</a>"}}},{"prompt":"Hemanth.contact.linkedin","result_attr":{"dangerouslySetInnerHTML":{"__html":"<a href=\'https://www.linkedin.com/in/saihemanthbr/\'>linkedin.com/in/saihemanthbr/</a>"}}},{"prompt":"Hemanth.age","preprocess":"() => Math.abs((new Date(Date.now() - (new Date(\'1999/07/15\')).getTime())).getUTCFullYear() - 1970)"},{"prompt":"Hemanth.languages","result":["English","Telugu","Hindi"],"preprocess":"(result) => JSON.stringify(result)"},{"prompt":"Hemanth.interests","result":["Coding","Cycling","Listening to Music","Reading Books"],"preprocess":"(result) => JSON.stringify(result)"},{"prompt":"Hemanth.strengths","result":["I Never Give Up","Autodidact","Quick Learner"],"preprocess":"(result) => JSON.stringify(result)"}]')},107:function(e){e.exports=JSON.parse('[{"id":"0","name":"Email","filename":"envelope-mark.svg","link":"mailto:sh.bheemreddy@gmail.com"},{"id":"1","name":"GitHub","filename":"github-mark.svg","link":"https://github.com/SaiHemanthBR"},{"id":"2","name":"LinkedIn","filename":"linkedin-mark.svg","link":"https://www.linkedin.com/in/saihemanthbr/"},{"id":"3","name":"Instagram","filename":"instagram-mark.svg","link":"https://www.instagram.com/saihemanthbr/"},{"id":"4","name":"Twitter","filename":"twitter-mark.svg","link":"https://twitter.com/BSaiHemanth"}]')},132:function(e,n,a){},133:function(e,n,a){},134:function(e,n,a){},153:function(e,n,a){},154:function(e,n,a){},155:function(e,n,a){},156:function(e,n,a){},157:function(e,n){},158:function(e,n,a){},160:function(e,n,a){"use strict";a.r(n);var t=a(0),i=a.n(t),o=a(10),r=a.n(o),s=a(54),c=a(198),p=a(199),l=a(162),m=a(194),d=a(197),h=a(100),_=a.n(h),u=a(4);var g=function(e){e.menuId;var n=e.mobileMenuId,a=e.onMobileMenuOpen,t=e.sections;return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)("div",{className:"navbar-section-desktop",children:t.map((function(e){return Object(u.jsx)(m.a,{variant:"text",className:"navbar-button",href:"#".concat(e.id),children:e.name},e.id)}))}),Object(u.jsx)("div",{className:"navbar-section-mobile",children:Object(u.jsx)(d.a,{"aria-label":"show more","aria-controls":n,"aria-haspopup":"true",onClick:a,color:"inherit",children:Object(u.jsx)(_.a,{})})})]})},b=a(211),y=a(215);var f=function(e){var n=e.id,a=e.anchorEl,t=e.open,i=e.onClose,o=e.sections;return Object(u.jsx)(b.a,{anchorEl:a,anchorOrigin:{vertical:"top",horizontal:"right"},id:n,keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:t,onClose:i,children:o.map((function(e){return Object(u.jsx)(y.a,{children:e.name},e.id)}))})};var O=function(e){var n=e.id,a=e.anchorEl,t=e.open,i=e.onClose,o=e.sections;return Object(u.jsx)(b.a,{anchorEl:a,anchorOrigin:{vertical:"top",horizontal:"right"},id:n,keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:t,onClose:i,children:o.map((function(e){return Object(u.jsx)(y.a,{children:e.name},e.id)}))})};a(132);var j=function(e){var n=e.sections,a=Object(t.useState)(null),i=Object(s.a)(a,2),o=i[0],r=i[1],m=Object(t.useState)(null),d=Object(s.a)(m,2),h=d[0],_=d[1],b=Boolean(o),y=Boolean(h),j=function(){_(null)},T="dashboard-search-account-menu",k="dashboard-search-account-menu-mobile";return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)(c.a,{position:"fixed",elevation:8,className:"navbar",children:Object(u.jsxs)(p.a,{children:[Object(u.jsx)(l.a,{className:"navbar-title",variant:"h6",noWrap:!0,children:"Sai Hemanth Bheemreddy"}),Object(u.jsx)("div",{className:"navbar-grow"}),Object(u.jsx)(g,{menuId:T,mobileMenuId:k,onMobileMenuOpen:function(e){_(e.currentTarget)},sections:n})]})}),Object(u.jsx)(O,{anchorEl:h,id:k,open:y,onClose:j,sections:n}),Object(u.jsx)(f,{anchorEl:o,id:T,open:b,onClose:function(){r(null),j()},sections:n})]})},T=a(202),k=a(101),R=a.n(k),M=a(200),v=a(201);a(133);var S=function(e){var n=e.window,a=e.goto,t=Object(M.a)({target:n?n():void 0,disableHysteresis:!0,threshold:300});return Object(u.jsx)(v.a,{in:t,children:Object(u.jsx)("div",{onClick:function(e){var n=(e.target.ownerDocument||document).querySelector("#".concat(a));n&&n.scrollIntoView({behavior:"smooth",block:"center"})},role:"presentation",className:"back-to-top-root",children:Object(u.jsx)(T.a,{color:"secondary",size:"medium","aria-label":"scroll back to top",children:Object(u.jsx)(R.a,{})})})})},x=a(116),D=a(72);a(134);var E=function(){var e,n=D[(e=D.length,Math.floor(Math.random()*e))],a="".concat("","/images/heros/").concat(n.filename);return Object(u.jsxs)("div",{className:"hero-image",id:"hero-image",style:{backgroundImage:"url(".concat(a,")")},children:[Object(u.jsxs)(x.a,{maxWidth:"xl",className:"hero-text",style:{color:n.color},children:[Object(u.jsx)(l.a,{variant:"h4",component:"div",className:"hero-title-before",children:"Hello, My name is"}),Object(u.jsx)(l.a,{variant:"h1",component:"div",className:"hero-title",children:"Sai Hemanth Bheemreddy"}),Object(u.jsx)(l.a,{variant:"h4",component:"div",className:"hero-title-after",children:"I love engineering things for fun!"})]}),Object(u.jsxs)("div",{className:"hero-footer",style:{color:n.color},children:[Object(u.jsx)(l.a,{variant:"body1",gutterBottom:!0,className:"name",children:n.name}),Object(u.jsx)("div",{className:"flex-grow"}),Object(u.jsx)(l.a,{variant:"caption",gutterBottom:!0,className:"copyright",children:n.copyright})]})]})},w=a(73),A=a.n(w),F=a(102),I=a(103),C=a.n(I),L=function(){var e=Object(F.a)(A.a.mark((function e(){var n,a,t,i;return A.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,C.a.get("https://saihemanthbr-public.s3.ap-south-1.amazonaws.com/saihemanthbr-github-io/projects.json");case 2:return n=e.sent,a=n.data.data,t=[],i=[],a.user.repositories.nodes.forEach((function(e){a.user.pinnedItems.edges.some((function(n){return n.node.id===e.id}))?t.push(e):i.push(e)})),e.abrupt("return",{pinned_repos:t,other_repos:i});case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),B=a(104);a(153);var P=function(){var e=Object.fromEntries((window.location.href.split("?")[1]||"").split("&").map((function(e){return e.split("=")}))),n=Object(t.useState)(e.fixtures?B:null),a=Object(s.a)(n,2),i=(a[0],a[1]);return Object(t.useEffect)((function(){e.fixtures||L().then((function(e){return i(e)}))}),[]),Object(u.jsx)(u.Fragment,{children:"Projects"})};var N=function(){return Object(u.jsx)(u.Fragment,{children:"Skills"})},U=a(105),z=a(203),H=a(204),K=a(107);a(155);var Z=function(){var e="".concat("","/images/socials");return Object(u.jsx)("div",{className:"contact-root",children:Object(u.jsxs)(x.a,{maxWidth:"sm",className:"contact-container",children:[Object(u.jsxs)("div",{className:"title-container",children:[Object(u.jsx)(l.a,{variant:"h3",gutterBottom:!0,align:"center",className:"title",children:"Get In Touch"}),Object(u.jsx)(l.a,{variant:"h6",gutterBottom:!0,align:"center",className:"subtitle",children:"My inbox is always open. Whether you have a question or just want to say hello, I'll try my best to get back to you! Feel free to DM me about any relevant job updates."})]}),Object(u.jsx)("div",{className:"social-container",children:K.map((function(n){return Object(u.jsx)(z.a,{className:"social-card",elevation:4,children:Object(u.jsxs)(H.a,{className:"social-card-action",href:n.link,children:[Object(u.jsx)("img",{src:"".concat(e,"/").concat(n.filename),alt:"link to ".concat(n.name)}),Object(u.jsx)(l.a,{variant:"subtitle1",align:"center",component:"span",children:n.name})]})},n.id)}))})]})})},W={hero:Object(u.jsx)(E,{}),projects:Object(u.jsx)(P,{}),skills:Object(u.jsx)(N,{}),about:Object(u.jsx)(U.a,{}),contact:Object(u.jsx)(Z,{})},G=a(67);a(156);var V=function(){return Object(u.jsxs)("div",{className:"App",children:[Object(u.jsx)(j,{sections:G.slice(1)}),Object(u.jsx)("div",{className:"container",children:G.map((function(e){return Object(u.jsx)("section",{id:e.id,className:"child",children:W[e.id]},e.id)}))}),Object(u.jsx)(S,{goto:G[0].id})]})},J=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,216)).then((function(n){var a=n.getCLS,t=n.getFID,i=n.getFCP,o=n.getLCP,r=n.getTTFB;a(e),t(e),i(e),o(e),r(e)}))},q=a(208),X=a(210),Q=a(214),Y=a(111),$=(a(157),Object(Y.a)({palette:{primary:{light:"#434345",main:"#1C1C1E",dark:"#000000",contrastText:"#FFFFFF"},secondary:{light:"#69A8FF",main:"#007AFF",dark:"#004FCB",contrastText:"#FFFFFF"},error:{main:"#FF3B30"}},typography:{fontFamily:["-apple-system","BlinkMacSystemFont","'Helvetica Neue'","Roboto","'Segoe UI'","Oxygen","Ubuntu","Cantarell","'Open Sans'","sans-serif"].join(",")}})),ee=a(46),ne=a(209),ae=a(212),te=a(112),ie=a(108),oe=Object(te.a)({uri:"https://api.github.com/graphql"}),re=Object(ie.a)((function(e,n){var a=n.headers;return{headers:Object(ee.a)(Object(ee.a)({},a),{},{authorization:"Bearer ".concat("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")})}})),se=new ne.a({link:re.concat(oe),cache:new ae.a});a(158);r.a.render(Object(u.jsx)(q.a,{theme:$,children:Object(u.jsx)(X.b,{injectFirst:!0,children:Object(u.jsx)(Q.a,{client:se,children:Object(u.jsx)(i.a.StrictMode,{children:Object(u.jsx)(V,{})})})})}),document.getElementById("root")),J(console.log)},67:function(e){e.exports=JSON.parse('[{"id":"hero","name":"Hero"},{"id":"about","name":"About"},{"id":"projects","name":"Projects"},{"id":"skills","name":"Skills"},{"id":"contact","name":"Contact"}]')},72:function(e){e.exports=JSON.parse('[{"id":"0","name":"Rocky Beach","filename":"rocky_beach.jpg","copyright":"","color":"#FFFFFF"},{"id":"1","name":"Starship SN10 Landing","filename":"starship_sn10_landing.jpg","copyright":"\xa9 SpaceX Inc.","color":"#000000"},{"id":"2","name":"Starship SN8 Launch","filename":"starship_sn8_launch.jpg","copyright":"\xa9 SpaceX Inc.","color":"#FFFFFF"},{"id":"3","name":"Starship SN8 on Test Stand","filename":"starship_sn8_stand.jpg","copyright":"\xa9 SpaceX Inc.","color":"#FFFFFF"},{"id":"4","name":"Planet Mars","filename":"mars.jpg","copyright":"\xa9 Martians? God?","color":"#FFFFFF"},{"id":"5","name":"macOS Monterey Wallpaper","filename":"monterey.jpg","copyright":"\xa9 Apple Inc. All rights reserved.","color":"#FFFFFF"},{"id":"6","name":"Palace of Westminster, London, UK","filename":"london.jpg","copyright":"\xa9 The Monarch? \ud83e\udd37","color":"#FFFFFF"},{"id":"7","name":"Night Sky","filename":"night_sky.jpg","copyright":"","color":"#FFFFFF"},{"id":"8","name":"Northern Lights, Astotin Lake, Canada","filename":"northern-lights.jpg","copyright":"\xa9 Serey Kim","color":"#FFFFFF"}]')}},[[160,1,2]]]);
//# sourceMappingURL=main.a295bcb6.chunk.js.map